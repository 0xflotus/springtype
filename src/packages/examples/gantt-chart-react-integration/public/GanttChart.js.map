{"version":3,"sources":["../node_modules/tslib/tslib.es6.js","../../../../../src/di/src/constant/INJECT_DECORATOR_METADATA_KEY.ts","../../../../../src/di/src/function/createDefaultArgumentsInjectionMetadata.ts","../../../../src/di/src/ComponentReflector.ts","../../../../../src/di/src/enum/InjectionProfile.ts","../../../../../src/di/src/enum/InjectionStrategy.ts","../../../../../src/di/src/function/resolveInjectionArgumentValue.ts","../../../../src/di/src/BeanFactory.ts","../../../../../src/di/src/enum/ApplicationRuntime.ts","../../../../../src/di/src/enum/ApplicationEnvironment.ts","../../../../src/di/src/ApplicationContext.ts","../node_modules/process/browser.js","../node_modules/@springtype/core/node_modules/reflect-metadata/Reflect.js","../../../../../src/di/src/function/registerBean.ts","../../../../../src/di/src/decorator/Component.ts","../../../../../src/di/src/decorator/Autowired.ts","../../../../../src/di/src/decorator/Inject.ts","../../../../src/di/src/AbstractWeakMapReflector.ts","../../../src/di/index.ts","../../../../../src/hmr/src/function/setupReloadOnCodeChange.ts","../../../../../src/hmr/src/decorator/ReloadOnCodeChange.ts","../../../src/hmr/index.ts","../../../../../src/lang/src/random/Randomizer.ts","../../../../../src/lang/src/reflect/Method.ts","../../../../../src/lang/src/util/Try.ts","../../../../../src/lang/src/string/CaseTransformer.ts","../../../../../src/lang/src/function/buffer.ts","../../../../../src/lang/src/decorator/Buffer.ts","../../../../../src/lang/src/object/Comparator.ts","../../../../../src/lang/src/function/memoize.ts","../../../../../src/lang/src/decorator/Memoize.ts","../../../../../src/lang/src/function/measureSpeed.ts","../../../../../src/lang/src/decorator/MeasureSpeed.ts","../../../../../src/lang/src/function/isMemorizedReturnValue.ts","../../../../../src/lang/src/function/delay.ts","../../../src/lang/index.ts","../../../../../src/logger/src/enum/LogLevel.ts","../../../../../src/logger/src/function/getLogLevelSeverity.ts","../../../../../src/logger/src/function/filterByLogLevel.ts","../../../../../src/logger/src/enum/LoggerImplType.ts","../../../../src/logger/src/defaultLoggerConfig.ts","../../../../../src/logger/src/impl/ConsoleLoggerImpl.ts","../../../../../src/logger/src/function/getLoggerImplInstance.ts","../../../../../src/logger/src/context/logger.ts","../../../../src/logger/src/ActiveLogger.ts","../../../../../src/logger/src/decorator/Logger.ts","../../../../../src/logger/src/function/log.ts","../../../../../src/logger/src/function/info.ts","../../../../../src/logger/src/function/warn.ts","../../../../../src/logger/src/function/debug.ts","../../../../../src/logger/src/function/error.ts","../../../../../src/logger/src/function/trace.ts","../../../src/logger/index.ts","../../../../src/virtualdom/src/constants.ts","../../../../../src/virtualdom/src/transformation/transformElementToVirtualElement.ts","../../../../../src/virtualdom/src/transformation/transformToFlatElementList.ts","../../../../../src/virtualdom/src/transformation/VirtualDOMTransformer.ts","../../../../../src/renderer/src/enum/RendererImplType.ts","../../../../src/renderer/src/defaultRendererConfig.ts","../../../../../../src/renderer/src/impl/tsx-to-html-renderer-impl/constants.ts","../../../../../../../src/renderer/src/impl/tsx-to-html-renderer-impl/function/parseAttributeNS.ts","../../../../../../../src/renderer/src/impl/tsx-to-html-renderer-impl/function/collectNamespaceAttributes.ts","../../../../../src/renderer/src/function/getInternalRenderApi.ts","../../../../../../src/webcomponent/src/reflector/cross-instance/FlowIdReflector.ts","../../../../../src/renderer/src/impl/TSXToHTMLRendererImpl.ts","../../../../../src/renderer/src/function/getRendererImplInstance.ts","../../../../../src/renderer/src/context/renderer.ts","../../../../../src/renderer/src/decorator/Renderer.ts","../../../src/renderer/index.ts","../../../../src/webcomponent/src/WebComponentReflector.ts","../../../../../src/webcomponent/src/function/isWebComponent.ts","../../../../../../src/webcomponent/src/reflector/cross-instance/SlotChildrenReflector.ts","../../../../../src/virtualdom/src/mutation/VirtualDOMMutator.ts","../../../src/virtualdom/index.ts","../../../../src/tss/src/CSSDeclarationBlockGenerator.tsx","../../../../../src/tss/src/constant/HOST_SELECTOR.ts","../../../../src/tss/src/CSSInlineStyleGenerator.tsx","../../../../../src/tss/src/context/theme.ts","../../../../../src/tss/src/decorator/Theme.ts","../../../src/tss/index.ts","../../../../../src/cd/src/function/interceptableChange.ts","../../../../../src/cd/src/function/createChangeDetector.ts","../../../../../src/cd/src/function/createFieldChangeDetector.ts","../../../../../src/cd/src/function/registerForChangeDetection.ts","../../../../../src/cd/src/reflector/fieldChangeCallbacks.ts","../../../../../src/cd/src/decorator/Field.ts","../../../../../src/cd/src/decorator/OnFieldChange.ts","../../../src/cd/index.ts","../../../../../src/webcomponent/src/polyfill/polyfillCustomElementsAPI.ts","../../../../../src/webcomponent/src/function/getAttributeReferencedValue.ts","../../../../../../src/webcomponent/src/reflector/protoype/eventAttributes.ts","../../../../../src/webcomponent/src/function/getAttributeEventListenerValue.ts","../../../../../../src/webcomponent/src/reflector/protoype/observedAttributes.ts","../../../../../../src/webcomponent/src/reflector/protoype/shadow.ts","../../../../../../src/webcomponent/src/reflector/instance/shadowRoot.ts","../../../../../../src/webcomponent/src/reflector/protoype/style.ts","../../../../../../src/webcomponent/src/reflector/protoype/template.ts","../../../../../src/webcomponent/src/function/createWebComponentClass.ts","../../../../../src/webcomponent/src/function/installInitialMutationObserver.ts","../../../../../src/webcomponent/src/function/decorateWebComponent.ts","../../../../../src/webcomponent/src/decorator/Element.ts","../../../../../../src/webcomponent/src/reflector/protoype/attributeChangeCallbacks.ts","../../../../../../src/webcomponent/src/reflector/instance/attributes.ts","../../../../../src/webcomponent/src/function/decorateTransparentAttributeGetterAndSetter.ts","../../../../../src/webcomponent/src/decorator/Attribute.ts","../../../../../src/webcomponent/src/decorator/Style.ts","../../../../../src/webcomponent/src/component/ErrorMessage.tsx","../../../../../src/webcomponent/src/enum/ShadowAttachMode.ts","../../../../../src/webcomponent/src/decorator/UseElement.ts","../../../../../src/webcomponent/src/decorator/OnAttributeChange.ts","../../../../../src/webcomponent/src/decorator/Template.ts","../../../../../src/webcomponent/src/function/decorateShadowAndAttachModeForComponent.ts","../../../../../src/webcomponent/src/decorator/ShadowDOM.ts","../../../../../src/webcomponent/src/decorator/EventAttribute.ts","../../../src/webcomponent/index.ts","../index.ts","GanttChart.tsx"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","__generator","body","_","f","y","g","label","sent","trys","ops","verb","Symbol","iterator","v","op","TypeError","pop","push","__exportStar","m","exports","__values","o","__read","ar","error","__spread","concat","__await","__asyncGenerator","asyncIterator","q","a","resume","fulfill","settle","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__importStar","mod","__esModule","k","default","__importDefault","cachedSetTimeout","cachedClearTimeout","process","module","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","factory","root","global","self","Function","exporter","makeExporter","previous","configurable","writable","hasOwn","supportsSymbol","toPrimitiveSymbol","toPrimitive","iteratorSymbol","supportsCreate","supportsProto","downLevel","HashMap","MakeDictionary","has","map","get","undefined","functionPrototype","getPrototypeOf","usePolyfill","_Map","Map","entries","CreateMapPolyfill","cacheSentinel","arraySentinel","MapIterator","keys","values","selector","_index","_keys","_values","_selector","index","throw","return","_cacheKey","_cacheIndex","enumerable","_find","set","delete","size","clear","getKey","getValue","getEntry","insert","_Set","Set","_map","add","Metadata","WeakMap","CreateWeakMapPolyfill","UUID_SIZE","rootKey","CreateUniqueKey","_key","table","GetOrCreateWeakMapTable","CreateUUID","FillRandomBytes","buffer","Math","random","data","GenRandomBytes","Uint8Array","crypto","getRandomValues","msCrypto","offset","byte","toString","toLowerCase","GetOrCreateMetadataMap","O","Create","targetMetadata","IsUndefined","metadataMap","OrdinaryHasOwnMetadata","MetadataKey","OrdinaryGetOwnMetadata","OrdinaryDefineOwnMetadata","MetadataValue","OrdinaryOwnMetadataKeys","keysObj","GetIterator","obj","method","GetMethod","IsCallable","IsObject","IteratorStep","nextValue","IteratorClose","Type","x","IsNull","ToPrimitive","input","PreferredType","hint","exoticToPrim","OrdinaryToPrimitive","toString_1","valueOf","toString_2","ToPropertyKey","argument","IsSymbol","ToString","IsArray","isArray","IsConstructor","V","func","OrdinaryGetPrototypeOf","proto","prototypeProto","propertyKey","attributes","DecorateConstructor","decorated","DecorateProperty","descriptor","IsPropertyKey","defineMetadata","hasMetadata","OrdinaryHasMetadata","parent","hasOwnMetadata","getMetadata","OrdinaryGetMetadata","getOwnMetadata","getMetadataKeys","OrdinaryMetadataKeys","ownKeys","parentKeys","_i","ownKeys_1","hasKey","_a","parentKeys_1","getOwnMetadataKeys","deleteMetadata"],"mappings":"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","file":"GanttChart.js","sourceRoot":"../src","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export const INJECT_DECORATOR_METADATA_KEY = \"@Inject\";","export function createDefaultArgumentsInjectionMetadata() {\n    return {\n        arguments: []\n    }\n}","import {InjectionStrategy} from \"./enum/InjectionStrategy\";\nimport {ComponentImpl} from \"./interface/ComponentImpl\";\nimport {BeanConfig} from \"./interface/BeanConfig\";\nimport {INJECT_DECORATOR_METADATA_KEY} from \"./constant/INJECT_DECORATOR_METADATA_KEY\";\nimport {ArgumentsInjectionMetadata} from \"./interface/ArgumentsInjectionMetadata\";\nimport {createDefaultArgumentsInjectionMetadata} from \"./function/createDefaultArgumentsInjectionMetadata\";\nimport {InjectionReference} from \"./type/InjectionReference\";\nimport {BeanInitializer} from \"./interface/BeanInitializer\";\nimport {ConstructorArgumentInitializer} from \"./interface/ConstructorArgumentInitializer\";\nimport {ConstructorArgumentInitializerFunction} from \"./interface/ConstructorArgumentInitializerFunction\";\n\nconst COMPONENT = 'COMPONENT';\nconst COMPONENT_CONFIG = 'COMPONENT_CONFIG';\nconst COMPONENT_CONSTRUCTOR_PARAMETER_METADATA = 'COMPONENT_CONSTRUCTOR_PARAMETER_METADATA';\nconst COMPONENT_INITIALIZERS = 'COMPONENT_INITIALIZERS';\nconst COMPONENT_IS_MOCK_FLAG = 'COMPONENT_IS_MOCK_FLAG';\nconst COMPONENT_NAME = 'COMPONENT_NAME';\nconst CONSTRUCTOR_ARGUMENT_INITIALIZERS = 'CONSTRUCTOR_ARGUMENT_INITIALIZERS';\nconst RESOLVED_CONSTRUCTOR_ARGUMENTS = 'RESOLVED_CONSTRUCTOR_ARGUMENTS';\n\n/**\n * This class uses the Reflect.metadata standard API (polyfilled)\n * to fetch and store compile-time and runtime reflected metadata.\n *\n * Calls to Reflect.getMetadata() point to TypeScript compiler generated\n * metadata. All other Reflect.* calls deal with runtime metadata (from decorators, BeanFactory).\n */\nexport class ComponentReflector {\n\n    static setIsMockComponent(componentCtor: ComponentImpl<any>): void {\n        Reflect.set(componentCtor, COMPONENT_IS_MOCK_FLAG, true);\n    }\n\n    static getIsMockComponent(componentCtor: ComponentImpl<any>): boolean {\n        return !!Reflect.get(componentCtor, COMPONENT_IS_MOCK_FLAG);\n    }\n\n    static getMethodArgumentTypes(componentCtor: ComponentImpl<any>, propertyName: string) {\n        return Reflect.getMetadata('design:paramtypes', componentCtor, propertyName) || [];\n    }\n\n    static getConstructorArgumentTypes(componentCtor: ComponentImpl<any>): Array<ComponentImpl<any>> {\n        return Reflect.getMetadata('design:paramtypes', componentCtor) || [];\n    }\n\n    static register(\n        componentCtor: ComponentImpl<any>,\n        parameterInjectionMetadata: ArgumentsInjectionMetadata,\n        beanConfig?: BeanConfig<ComponentImpl<any>>,\n    ): void {\n\n        Reflect.set(componentCtor, COMPONENT_CONFIG, beanConfig);\n        Reflect.set(componentCtor, COMPONENT, componentCtor.name);\n        Reflect.set(componentCtor, COMPONENT_NAME, componentCtor.name);\n        Reflect.set(componentCtor, COMPONENT_CONSTRUCTOR_PARAMETER_METADATA, parameterInjectionMetadata);\n    }\n\n    static registerDerived(\n        originalComponentCtor: ComponentImpl<any>,\n        derivedComponentCtor: ComponentImpl<any>,\n    ) {\n\n        Reflect.set(derivedComponentCtor, COMPONENT, ComponentReflector.getSymbol(originalComponentCtor));\n        Reflect.set(derivedComponentCtor, COMPONENT_NAME, ComponentReflector.getName(originalComponentCtor));\n        Reflect.set(derivedComponentCtor, COMPONENT_CONFIG, ComponentReflector.getConfig(originalComponentCtor));\n        Reflect.set(derivedComponentCtor, COMPONENT_CONSTRUCTOR_PARAMETER_METADATA,\n            ComponentReflector.getConstructorArgumentsInjectionMetadata(originalComponentCtor));\n    }\n\n    static getConstructorArgumentsInjectionMetadata(\n        componentCtor: ComponentImpl<any>\n    ): ArgumentsInjectionMetadata {\n        return Reflect.get(componentCtor, COMPONENT_CONSTRUCTOR_PARAMETER_METADATA);\n    }\n\n    static setConstructorArgumentsInjectionMetadata(\n        targetClassInstanceOrCtor: Function,\n        parameterIndex: number,\n        injectionReference: InjectionReference,\n        injectionStrategy: InjectionStrategy): void {\n\n\n        // fetch (probably existing) meta data\n        const parameterInjectionMetaData: ArgumentsInjectionMetadata = Reflect.getOwnMetadata(\n            INJECT_DECORATOR_METADATA_KEY, targetClassInstanceOrCtor, targetClassInstanceOrCtor.name\n        ) || createDefaultArgumentsInjectionMetadata();\n\n        // enhance meta data for parameter\n        parameterInjectionMetaData.arguments[parameterIndex] = {\n            index: parameterIndex,\n            injectionReference,\n            injectionStrategy\n        };\n\n        // (re-)define injection reference meta data\n        Reflect.defineMetadata(\n            INJECT_DECORATOR_METADATA_KEY,\n            parameterInjectionMetaData,\n            targetClassInstanceOrCtor,\n            targetClassInstanceOrCtor.name);\n    }\n\n    static setMethodArgumentsInjectionMetadata(\n        targetClassInstanceOrCtor: Object,\n        parameterIndex: number,\n        propertyKey: string | symbol,\n        injectionReference: InjectionReference,\n        injectionStrategy: InjectionStrategy\n    ): void {\n\n        // fetch (probably existing) meta data\n        const parameterInjectionMetaData: ArgumentsInjectionMetadata = ComponentReflector.getMethodArgumentsInjectionMetadata(\n            targetClassInstanceOrCtor, propertyKey\n        ) || createDefaultArgumentsInjectionMetadata();\n\n        // enhance meta data for parameter\n        parameterInjectionMetaData.arguments[parameterIndex] = {\n            index: parameterIndex,\n            injectionReference,\n            injectionStrategy\n        };\n\n        // (re-define) injection reference for parameter index\n        Reflect.defineMetadata(INJECT_DECORATOR_METADATA_KEY, parameterInjectionMetaData, targetClassInstanceOrCtor, propertyKey);\n    }\n\n    static getMethodArgumentsInjectionMetadata(\n        targetClassInstanceOrCtor: Object,\n        propertyKey: string | symbol,\n    ): ArgumentsInjectionMetadata {\n        return Reflect.getOwnMetadata(\n            INJECT_DECORATOR_METADATA_KEY, targetClassInstanceOrCtor, propertyKey\n        );\n    }\n\n    static getSymbol(targetCtor: ComponentImpl<any>): any {\n        return Reflect.get(targetCtor, COMPONENT);\n    }\n\n    static getName(targetCtor: ComponentImpl<any>): string {\n        return Reflect.get(targetCtor, COMPONENT_NAME);\n    }\n\n    static getConfig(targetCtor: ComponentImpl<any>): BeanConfig<ComponentImpl<any>> {\n        return Reflect.get(targetCtor, COMPONENT_CONFIG);\n    }\n\n    /* When constructor arguments (injections) are resolved, the result is cached for later use */\n    static setResolvedConstructorArguments(targetCtor: ComponentImpl<any>, constructorArguments: Array<ComponentImpl<any>>): void {\n        Reflect.set(targetCtor, RESOLVED_CONSTRUCTOR_ARGUMENTS, constructorArguments);\n    }\n\n    static getResolvedConstructorArguments(targetCtor: ComponentImpl<any>): Array<ComponentImpl<any>> {\n        return Reflect.get(targetCtor, RESOLVED_CONSTRUCTOR_ARGUMENTS);\n    }\n\n    static isComponent(componentCtor: ComponentImpl<any>): boolean {\n        return !!ComponentReflector.getSymbol(componentCtor);\n    }\n\n    static getInitializers(targetCtor: ComponentImpl<any>): Array<BeanInitializer> {\n        return Reflect.get(targetCtor, COMPONENT_INITIALIZERS) || [];\n    }\n\n    static addInitializer(targetCtor: ComponentImpl<any>, initializer: BeanInitializer): void {\n        const initializers = ComponentReflector.getInitializers(targetCtor);\n        initializers.push(initializer);\n        Reflect.set(targetCtor, COMPONENT_INITIALIZERS, initializers);\n    }\n\n    static callInitializers(initializers: Array<BeanInitializer>, instance: any): void {\n        initializers.forEach(initializer => initializer(instance));\n    }\n\n    static getConstructorArgumentInitializers(targetCtor: ComponentImpl<any>): Array<ConstructorArgumentInitializer> {\n        return Reflect.get(targetCtor, CONSTRUCTOR_ARGUMENT_INITIALIZERS) || [];\n    }\n\n    static addConstructorArgumentInitializer(\n        targetCtor: ComponentImpl<any>,\n        initializer: ConstructorArgumentInitializerFunction,\n        argumentIndex: number\n    ): void {\n        const initializers = ComponentReflector.getConstructorArgumentInitializers(targetCtor);\n        initializers.push({\n            initializer,\n            argumentIndex\n        });\n        Reflect.set(targetCtor, CONSTRUCTOR_ARGUMENT_INITIALIZERS, initializers);\n    }\n}","export enum InjectionProfile {\n    DEFAULT = 'DEFAULT',\n    TEST = 'TEST',\n}","export enum InjectionStrategy {\n    SINGLETON = 'SINGLETON',\n    FACTORY = 'FACTORY'\n}","import {ComponentReflector} from \"../ComponentReflector\";\nimport {ApplicationContext} from \"../ApplicationContext\";\nimport {InjectionProfile} from \"../enum/InjectionProfile\";\nimport {InjectionReference} from \"../type/InjectionReference\";\nimport {ArgumentsInjectionMetadata} from \"../interface/ArgumentsInjectionMetadata\";\n\nexport function resolveInjectionArgumentValue(\n    argumentsInjectionMetaData: ArgumentsInjectionMetadata,\n    index: number,\n    isTestComponent: boolean\n) {\n\n    let injectionValue: any;\n\n    if (!argumentsInjectionMetaData.arguments[index]) return;\n\n    const injectionReference: InjectionReference =\n        argumentsInjectionMetaData.arguments[index].injectionReference;\n\n    if (typeof injectionReference !== 'undefined') {\n\n        if (typeof injectionReference === 'function') {\n\n            if (ComponentReflector.isComponent(injectionReference)) {\n\n                // it is not a InjectBeanFactory, just use the instance\n                injectionValue = ApplicationContext.getInstance().getBean(\n                    injectionReference,\n                    isTestComponent ? InjectionProfile.TEST : InjectionProfile.DEFAULT,\n                    argumentsInjectionMetaData.arguments[index].injectionStrategy,\n                );\n\n            } else {\n\n                // case: function is not a InjectBeanFactory NOR registered bean -> inject function reference\n                injectionValue = injectionReference;\n            }\n\n        } else {\n\n            // use the value directly (any value case)\n            injectionValue = injectionReference;\n        }\n    }\n    return injectionValue;\n}","import {ComponentReflector} from \"./ComponentReflector\";\nimport {InjectionProfile} from './enum/InjectionProfile';\nimport {InjectionStrategy} from \"./enum/InjectionStrategy\";\nimport {ComponentImpl} from \"./interface/ComponentImpl\";\nimport {resolveInjectionArgumentValue} from \"./function/resolveInjectionArgumentValue\";\nimport {ArgumentsInjectionMetadata} from \"./interface/ArgumentsInjectionMetadata\";\nimport {ConstructorArgumentInitializer} from \"./interface/ConstructorArgumentInitializer\";\n\nconst PRIMITIVE_TYPE_NAMES = ['Number', 'Array', 'String', 'Boolean', 'RegExp', 'Date'];\n\nexport class BeanFactory {\n\n    registry = {};\n    singletonInstances = {};\n\n    getBean<T extends ComponentImpl<any>>(\n        componentCtor: T,\n        injectionProfile: InjectionProfile = InjectionProfile.DEFAULT,\n        injectionStrategy: InjectionStrategy = InjectionStrategy.SINGLETON): any {\n\n        const originalCtor = componentCtor;\n\n        // validate component reference\n        componentCtor = this.getComponent(componentCtor);\n\n        if (!componentCtor || !ComponentReflector.isComponent(componentCtor)) {\n\n            return this.solveUnresolvableBean(\n                originalCtor\n            );\n        }\n\n        const classSymbol = ComponentReflector.getSymbol(componentCtor);\n        const beanConfig = ComponentReflector.getConfig(componentCtor);\n\n        if (injectionProfile === InjectionProfile.TEST &&\n            beanConfig &&\n            beanConfig.mockedBy &&\n            ComponentReflector.isComponent(beanConfig.mockedBy)) {\n\n            componentCtor = this.getComponent(beanConfig.mockedBy);\n\n            ComponentReflector.setIsMockComponent(componentCtor);\n        }\n\n        // only in case of singleton instance retrieval,\n        // try to fetch from cache, otherwise directly head to new instance creation\n        if (injectionStrategy === InjectionStrategy.SINGLETON) {\n\n            const singletonInstance = this.getSingletonBeanInstance(classSymbol);\n\n            if (singletonInstance) {\n                return singletonInstance;\n            }\n        }\n\n        // injectionStrategy === InjectionStrategy.FACTORY || singleton instance not found\n\n        const beanInstance = new componentCtor(\n            ...this.resolveConstructorArguments(componentCtor, injectionProfile)\n        );\n\n        this.initializeBeanInstance(beanInstance, ComponentReflector.getInitializers(componentCtor));\n\n        if (injectionStrategy === InjectionStrategy.SINGLETON) {\n            this.setSingletonBeanInstance(classSymbol, beanInstance);\n        }\n        return beanInstance;\n    }\n\n    setComponent(componentCtor: ComponentImpl<any>) {\n        Reflect.set(this.registry, ComponentReflector.getSymbol(componentCtor), componentCtor);\n    }\n\n    getComponent(componentCtor: ComponentImpl<any>) {\n        return Reflect.get(this.registry, ComponentReflector.getSymbol(componentCtor)) || null;\n    }\n    \n    initializeBeanInstance(instance: any, initializers: Array<Function>) {\n\n        initializers.forEach((initializer) => {\n            initializer(instance);\n        });\n    }\n\n    getSingletonBeanInstance(\n        classSymbol: symbol\n    ): any {\n        return Reflect.get(this.singletonInstances, classSymbol);\n    }\n\n    setSingletonBeanInstance(\n        classSymbol: symbol,\n        beanInstance: any\n    ): void {\n        Reflect.set(this.singletonInstances, classSymbol, beanInstance);\n    }\n\n    resolveConstructorArguments<T extends ComponentImpl<any>>(\n        componentCtor: T,\n        injectionProfile: InjectionProfile = InjectionProfile.DEFAULT,\n    ): Array<any> {\n\n        componentCtor = this.getComponent(componentCtor);\n\n        const isTestComponent = ComponentReflector.getIsMockComponent(componentCtor);\n\n        const cachedConstructorArguments = ComponentReflector.getResolvedConstructorArguments(componentCtor);\n\n        if (cachedConstructorArguments) {\n            return cachedConstructorArguments;\n        }\n\n        // fetch constructor parameter types from reflection metadata\n        const constructorParameterTypes: Array<ComponentImpl<any>> = ComponentReflector.getConstructorArgumentTypes(\n            componentCtor\n        );\n\n        // and do the default round-trip to get all instances by type\n        const constructorArguments = this.getBeans(\n            constructorParameterTypes,\n            componentCtor,\n            injectionProfile\n        );\n\n        const constructorArgumentsParameterInjectionMetdata: ArgumentsInjectionMetadata =\n            ComponentReflector.getConstructorArgumentsInjectionMetadata(componentCtor);\n\n\n        // but if there are special @Inject decorations,\n        // we head to resolve them and use these values instead\n        if (constructorArgumentsParameterInjectionMetdata &&\n            constructorArgumentsParameterInjectionMetdata.arguments &&\n            constructorArgumentsParameterInjectionMetdata.arguments.length) {\n\n            const overrideInjectParamValues = constructorArgumentsParameterInjectionMetdata.arguments;\n\n            for (let i = 0; i < overrideInjectParamValues.length; i++) {\n\n                if (typeof overrideInjectParamValues[i] !== 'undefined') {\n\n                    constructorArguments[overrideInjectParamValues[i].index] =\n\n                        resolveInjectionArgumentValue(\n                            constructorArgumentsParameterInjectionMetdata,\n                            overrideInjectParamValues[i].index,\n                            isTestComponent\n                        );\n                }\n            }\n        }\n\n        const constructorArgumentInitializers = ComponentReflector.getConstructorArgumentInitializers(componentCtor);\n\n        if (constructorArgumentInitializers.length) {\n\n            constructorArgumentInitializers.forEach((initializer: ConstructorArgumentInitializer) => {\n\n                constructorArguments[initializer.argumentIndex] = initializer.initializer(\n                    constructorArguments[initializer.argumentIndex]\n                );\n            });\n        }\n\n        // cache\n        ComponentReflector.setResolvedConstructorArguments(componentCtor, constructorArguments);\n\n        return constructorArguments;\n    }\n\n    getBeans<T extends ComponentImpl<any>>(\n        types: Array<ComponentImpl<any>>,\n        forComponentCtor: T,\n        injectionProfile: InjectionProfile = InjectionProfile.DEFAULT,\n    ): Array<ComponentImpl<any>> {\n\n        if (types && types.length > 0) {\n\n            const beans: Array<any> = [];\n\n            types.forEach((_componentCtor: ComponentImpl<any>) => {\n\n                const componentCtor = this.getComponent(_componentCtor);\n\n                // the component to inject (componentCtor) matches the component to inject in (forComponentCtor)\n                if (forComponentCtor === componentCtor) {\n\n                    beans.push(\n                        this.solveCyclicDependency(componentCtor)\n                    );\n                } else if (!componentCtor) {\n\n                    // bean unresolvable -> inject undefined\n                    beans.push(\n                        this.solveUnresolvableBean(\n                            _componentCtor\n                        )\n                    );\n\n                } else {\n\n                    const singletonBeanInstanceFromRegistry = this.getSingletonBeanInstance(\n                        ComponentReflector.getSymbol(componentCtor)\n                    );\n\n                    if (singletonBeanInstanceFromRegistry) {\n\n                        beans.push(singletonBeanInstanceFromRegistry)\n\n                    } else {\n\n                        beans.push(\n                            // follow down the rabbit hole\n                            this.getBean(componentCtor, injectionProfile)\n                        );\n                    }\n                }\n            });\n            return beans;\n        }\n        return [];\n    }\n\n    solveUnresolvableBean<T extends ComponentImpl<any>>(\n        componentCtor: T\n    ): any {\n\n        // inject interfaces as empty objects\n        if (componentCtor.prototype.constructor === Object) {\n            return {};\n        } else {\n\n            const typeName = (<any>componentCtor).name;\n\n            if (!typeName.match(/HTML.*Element/) && !typeName.match(/SVG.*Element/) && PRIMITIVE_TYPE_NAMES.indexOf(typeName) === -1) {\n                console.warn(`The component referenced for injection is missing a @Component decorator: ${typeName}`);\n            }\n            return undefined;\n        }\n    }\n\n    solveCyclicDependency<T extends ComponentImpl<any>>(componentCtor: T): T {\n\n        console.warn(`Cyclic dependency detected in @Component: ${ComponentReflector.getName(componentCtor)}`);\n\n        return componentCtor;\n    }\n}","export enum ApplicationRuntime {\n    WEBBROWSER = \"WEBBROWSER\",\n    NODE = \"NODE\"\n}","export enum ApplicationEnvironment {\n    PRODUCTION = \"PRODUCTION\",\n    E2E_TEST = \"E2E_TEST\",\n    INTEGRATION_TEST = \"INTEGRATION_TEST\",\n    STAGING = \"STAGING\",\n    DEV = \"DEV\"\n}","import {BeanFactory} from \"./BeanFactory\";\nimport {ApplicationRuntime} from \"./enum/ApplicationRuntime\";\nimport {ApplicationEnvironment} from \"./enum/ApplicationEnvironment\";\n\nconst APPLICATION_CONTEXT = 'APPLICATION_CONTEXT';\n\nexport class ApplicationContext extends BeanFactory {\n\n    protected environment: ApplicationEnvironment = ApplicationEnvironment.DEV;\n    protected config: any = {};\n\n    setEnvironment(environment: ApplicationEnvironment): void {\n        this.environment = environment;\n    }\n\n    getEnvironment(): ApplicationEnvironment {\n        return this.environment;\n    }\n\n    static setGlobal(name: string|number|symbol, value: any): void {\n        (<any>ApplicationContext.getRuntimeGlobalObject())[name] = value;\n    }\n\n    static getGlobal(name: string|number|symbol): any {\n        return (<any>ApplicationContext.getRuntimeGlobalObject())[name];\n    }\n\n    static getInstance(): ApplicationContext {\n\n        let globalContext = ApplicationContext.getGlobal(APPLICATION_CONTEXT);\n\n        if (!globalContext) {\n            globalContext = new ApplicationContext();\n            ApplicationContext.setGlobal(APPLICATION_CONTEXT, globalContext);\n        }\n        return globalContext;\n    }\n\n    static getRuntimeGlobalObject(): Object {\n        \n        switch (ApplicationContext.getRuntime()) {\n            case ApplicationRuntime.WEBBROWSER:\n\n                if (!(window as any)['$st']) {\n                    (window as any)['$st'] = {};\n                }\n                return (window as any).$st;\n        }\n\n        // return local object context\n        return {};\n    }\n\n    static getRuntime(): ApplicationRuntime {\n\n        if (typeof window != 'undefined') {\n            return ApplicationRuntime.WEBBROWSER;\n        }\n        return ApplicationRuntime.NODE;\n    }\n\n    set(name: string|number|symbol, value: any) {\n        Reflect.set(this.config, name, value);\n    }\n\n    get(name: string|number|symbol): any {\n        return Reflect.get(this.config, name);\n    }\n}","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n","import {BeanConfig} from \"../interface/BeanConfig\";\nimport {ComponentReflector} from \"../ComponentReflector\";\nimport {ApplicationContext} from \"../ApplicationContext\";\nimport {ComponentImpl} from \"../interface/ComponentImpl\";\nimport {ArgumentsInjectionMetadata} from \"../interface/ArgumentsInjectionMetadata\";\nimport {INJECT_DECORATOR_METADATA_KEY} from \"../constant/INJECT_DECORATOR_METADATA_KEY\";\n\nexport function registerBean<T extends ComponentImpl<any>>(componentCtor: T, beanConfig?: BeanConfig<T>) {\n\n    // @Inject decorators that may be defined inside of the class definition\n    // this @Component decorator is bound to, are processed first.\n    // This call collects it's meta data so the BeanFactory can\n    // handle the constructor parameter value injection correctly.\n    const parameterInjectionMetaData: ArgumentsInjectionMetadata = Reflect.getOwnMetadata(\n        INJECT_DECORATOR_METADATA_KEY, componentCtor, componentCtor.name\n    );\n\n    ComponentReflector.register(componentCtor, parameterInjectionMetaData, beanConfig);\n\n    // a generic intermediate class is conjured, inheriting the class\n    // the decorator is bound to. This keeps the prototype chain and later\n    // instanceof checks sane. It is necessary, because we want to\n    // *replace* the constructor with one that resolves it's arguments by itself (injection)\n    // and is capable of even handling @Inject decorators in it constructor arguments (wohoo)\n    const InjectionClassProxy = class extends componentCtor {\n        constructor(...args: Array<any>) {\n            super(...ApplicationContext.getInstance().resolveConstructorArguments(componentCtor));\n        }\n    };\n\n    ComponentReflector.registerDerived(componentCtor, InjectionClassProxy);\n\n    ApplicationContext.getInstance().setComponent(InjectionClassProxy);\n\n    // just replace the original class declaration by our generic one\n    return InjectionClassProxy;\n}","// MUST be imported here\nimport \"reflect-metadata\";\n\nimport {ComponentImpl} from \"../interface/ComponentImpl\";\nimport {BeanConfig} from \"../interface/BeanConfig\";\nimport {registerBean} from \"../function/registerBean\";\n\nexport function Component<T extends ComponentImpl<any>>(beanConfigOrCtor?: BeanConfig<T>|T): T|any {\n\n    // called with @Component - no beanConfig object\n    if (!(typeof beanConfigOrCtor === 'function')) {\n\n        return (target: T) => {\n            return registerBean(target, <BeanConfig<T>> beanConfigOrCtor);\n        }\n\n    } else {\n\n        // called with @Component() or @Component({ ... })\n        return registerBean(<T> beanConfigOrCtor);\n    }\n}","import {ComponentReflector} from \"../ComponentReflector\";\nimport {ApplicationContext} from \"../ApplicationContext\";\nimport {InjectionProfile} from \"../enum/InjectionProfile\";\nimport {ArgumentsInjectionMetadata} from \"../interface/ArgumentsInjectionMetadata\";\nimport {resolveInjectionArgumentValue} from \"../function/resolveInjectionArgumentValue\";\n\nexport function Autowired(target: any, propertyName: string, descriptor: TypedPropertyDescriptor<Function | any>) {\n\n    const methodArgumentTypes = ComponentReflector.getMethodArgumentTypes(target, propertyName);\n\n    // backup original method\n    const method: Function = <Function> descriptor.value;\n\n    // we replace the method again, the call the original impl. with injected arguments\n    descriptor.value = function() {\n\n        const cmp = ApplicationContext.getInstance().getComponent(target.constructor);\n\n        if (!cmp) {\n            throw new Error('@Autowired on methods requires @Component on the class.');\n        }\n\n        const isTestComponent = ComponentReflector.getIsMockComponent(\n            cmp\n        );\n\n        // replacement method impl. -> this is called when the actual @BeanMethod annotated method is called (hook)\n        const argumentsInjectionMetaData: ArgumentsInjectionMetadata =\n            ComponentReflector.getMethodArgumentsInjectionMetadata(\n                target, propertyName\n            );\n\n        const newArgs: Array<any> = [];\n\n        // 1. Copy initial argument values (non-optionals, default values)\n        for (let i=0; i<arguments.length; i++) {\n            newArgs[i] = arguments[i];\n        }\n\n        // 2. There might be @Inject(...) decorations, process them and inject\n        if (argumentsInjectionMetaData &&\n            argumentsInjectionMetaData.arguments &&\n            argumentsInjectionMetaData.arguments.length) {\n\n            // copy arguments over into new arguments array (because arguments are immutable in modern times ;)\n            for (let i=0; i<argumentsInjectionMetaData.arguments.length; i++) {\n\n                // resolve override injection argument\n                const injectionValue = resolveInjectionArgumentValue(argumentsInjectionMetaData, i, isTestComponent);\n\n                // conditionally overwrite original call argument for sub-call\n                if (typeof injectionValue !== 'undefined') {\n\n                    newArgs[i] = injectionValue;\n\n                } else if (argumentsInjectionMetaData.arguments[i]) {\n\n                    // parameter has @Inject() decorator, but no explicit value; fallback to default strategy\n                    if (methodArgumentTypes[i]) {\n\n                        // fetch singleton from cache by reflected type\n                        newArgs[i] = ApplicationContext.getInstance().getBean(\n                            methodArgumentTypes[i],\n                            isTestComponent ? InjectionProfile.TEST : InjectionProfile.DEFAULT,\n                            argumentsInjectionMetaData.arguments[i].injectionStrategy\n                        );\n                    }\n                }\n            }\n        }\n\n        // 3. For all arguments that are appended optional and are not passed and not injects by @Inject(...)\n        //    try to inject them using their type reference\n        for (let i=arguments.length; i<methodArgumentTypes.length; i++) {\n\n            if (typeof newArgs[i] === 'undefined' &&\n                ComponentReflector.isComponent(methodArgumentTypes[i])) {\n\n\n                newArgs[i] = ApplicationContext.getInstance().getBean(\n                    methodArgumentTypes[i],\n                    isTestComponent ? InjectionProfile.TEST : InjectionProfile.DEFAULT\n                );\n            }\n        }\n        return method.apply(this, newArgs);\n    }\n}","import {ComponentReflector} from \"../ComponentReflector\";\nimport {InjectionStrategy} from \"../enum/InjectionStrategy\";\nimport {InjectionReference} from \"../type/InjectionReference\";\n\nexport function Inject(\n    injectionReference?: InjectionReference,\n    injectionStrategy: InjectionStrategy = InjectionStrategy.SINGLETON\n) {\n\n    return function(targetClassInstanceOrCtor: Object|Function, propertyKey: string | symbol, argumentIndex: number) {\n\n        if (typeof targetClassInstanceOrCtor === 'function') {\n\n            // case: param on constructor function\n            ComponentReflector.setConstructorArgumentsInjectionMetadata(\n                targetClassInstanceOrCtor,\n                argumentIndex,\n                injectionReference,\n                injectionStrategy\n            );\n\n        } else {\n\n            // case: param on method\n            ComponentReflector.setMethodArgumentsInjectionMetadata(\n                targetClassInstanceOrCtor,\n                argumentIndex,\n                propertyKey,\n                injectionReference,\n                injectionStrategy\n            );\n        }\n    }\n}","import {ApplicationContext} from \"./ApplicationContext\";\n\nexport class AbstractWeakMapReflector {\n\n    protected static get REFLECTOR_NAME() { return '' };\n    protected static state: WeakMap<any, any>;\n\n    static setup() {\n        this.state = ApplicationContext.getGlobal(this.REFLECTOR_NAME);\n        if (!this.state) {\n            this.state = new WeakMap();\n            ApplicationContext.setGlobal(this.REFLECTOR_NAME, this.state);\n        }\n    }\n\n    static set(instance: any, value: any) {\n        if (!this.state) this.setup();\n        this.state.set(instance, value);\n    }\n\n    static get(instance: any): any {\n        if (!this.state) this.setup();\n        return this.state.get(instance);\n    }\n\n    static has(instance: any): boolean {\n        if (!this.state) this.setup();\n        return this.state.has(instance);\n    }\n}","export * from \"./src/ApplicationContext\";\nexport * from \"./src/BeanFactory\";\nexport * from \"./src/ComponentReflector\";\nexport * from \"./src/decorator/Component\";\nexport * from \"./src/decorator/Autowired\";\nexport * from \"./src/decorator/Inject\";\nexport * from \"./src/interface/ComponentImpl\";\nexport * from \"./src/enum/ApplicationEnvironment\";\nexport * from \"./src/enum/ApplicationRuntime\";\nexport * from \"./src/AbstractWeakMapReflector\";","export const setupReloadOnCodeChange = (module: any) => {\n\n    if (module && module.hot) {\n\n        (module as any).hot.dispose(() => {});\n        (module as any).hot.accept(() => {\n\n            // make sure to hard-reload on hot module replacement\n            // to prevent odd/buggy behaviour with certain build systems\n            // (as cache invalidation isn't as easy as it seems to be, huh...)\n            window.location.reload();\n        });\n    }\n};","import {setupReloadOnCodeChange} from \"../..\";\n\n// @ts-ignore\nconst _module = module;\n\nexport function ReloadOnCodeChange(target: any): any {\n    setupReloadOnCodeChange(_module);\n    return target;\n}","export * from \"./src/function/setupReloadOnCodeChange\";\nexport * from \"./src/decorator/ReloadOnCodeChange\";","/**\n * This class generates random numbers or strings to a given characterSet.\n */\nexport class Randomizer {\n\n    /**\n     * Generate one random string\n     * @param characterSet the characters that will be included\n     * @param length the length of string\n     */\n    static generateString(characterSet: string, length: number): string {\n        let str = \"\";\n        for (let i = 0; i < length; i++) {\n            str += characterSet[~~(Math.random() * characterSet.length)];\n        }\n        return str;\n    }\n\n    /**\n     * Generate an array of random strings\n     * @param characterSet the characters that will be included\n     * @param length the length of string\n     * @param amount the size of generated strings\n     */\n    static generateStrings(characterSet: string, length: number, amount: number): string[] {\n        let result = new Array<string>(amount);\n        for (let i = 0; i < length; i++) {\n            result[i] = Randomizer.generateString(characterSet, length);\n        }\n        return result;\n    }\n\n    /**\n     * Generate a array of random numbers\n     * @param min the minimum value\n     * @param max the maximum value\n     * @param amount amount the size of generated numbers\n     */\n    static generateNumbers(min: number, max: number, amount: number): number[] {\n        let result = new Array<number>(amount);\n        for (let i = 0; i < amount; i++) {\n            result[i] = (Math.floor(Math.random() * (max - min + 1)) + min);\n        }\n        return result;\n    }\n}\n","export function getParamNames(fn: Function) {\n    let src = fn.toString().replace(/\\/\\*.*\\*\\//, '');\n    let params: Array<string> = [];\n    let pos1 = src.indexOf('(');\n    let pos2 = src.indexOf(')');\n    let paramSrc = src.substring(pos1 + 1, pos2);\n\n    if (pos1 === -1) {\n\n        params = [src.split('=>')[0].trim()];\n\n    } else {\n\n        let params_ = paramSrc.split(',');\n\n        for (let i = 0; i < params_.length; ++i) {\n\n            let paramName = params_[i].trim();\n\n            if (paramName) {\n                params.push(paramName);\n            }\n        }\n    }\n    return params;\n}\n","export abstract class Try<T> {\n\n    private static requireNonNullDefined<T>(value: T, message: string): T {\n        if (typeof value === 'undefined') {\n            throw new UndefinedError(message + ' was undefined');\n        }\n        if (value === null) {\n            throw new NullPointerError(message + ' was null');\n        }\n        return value;\n    }\n\n    public static of<T>(callable: () => T): Try<T> {\n        try {\n            const result = callable();\n            Try.requireNonNullDefined(result, \"result\");\n            return new TrySuccess(result);\n        } catch (t) {\n            return new TryFailure(t);\n        }\n    }\n\n    public filter(predicate: (value: T) => boolean): Try<T> {\n        if (this.isSuccess()) {\n            try {\n                const value = this.get();\n                if (!predicate(value)) {\n                    return new TryFailure(new NoSuchElementError(\"Predicate does not hold for \" + value));\n                }\n            } catch (e) {\n                return new TryFailure(e);\n            }\n        }\n        return this;\n    }\n\n\n    public flatMap<U extends T>(mapper: (value: T) => U): Try<U> {\n        if (this.isSuccess()) {\n            try {\n                return Try.of(() => mapper(this.get()));\n            } catch (t) {\n                return new TryFailure(t);\n            } finally {\n\n            }\n        } else {\n            return new TryFailure(this.getCause());\n        }\n    }\n\n    public fold<U>(ifTryFailure: (error: Error) => U, ifSuccess: (value: T) => U): U {\n        return this.isSuccess() ? ifSuccess(this.get()) : ifTryFailure(this.getCause());\n    }\n\n\n    public getOrElse(other: T): T {\n        return this.isSuccess() ? this.get() : other;\n    }\n\n    public getOrElseGet(supplier: () => T): T {\n        return this.isSuccess() ? this.get() : supplier();\n    }\n\n    public getOrElseThrow<X extends Error>(exceptionProvider: (error: Error) => X): T {\n        if (this.isSuccess()) {\n            return this.get();\n        } else {\n            throw exceptionProvider(this.getCause());\n        }\n    }\n\n    public map<U>(mapper: (value: T) => U): Try<U> {\n        if (this.isSuccess()) {\n            try {\n                return new TrySuccess(mapper(this.get()));\n            } catch (t) {\n                return new TryFailure(t);\n            }\n        } else {\n            return new TryFailure(this.getCause());\n        }\n    }\n\n\n    public mapFailure<X extends Error>(mapper: (error: Error) => X): Try<T> {\n        if (this.isFailure()) {\n            try {\n                return new TryFailure(mapper(this.getCause()));\n            } catch (t) {\n                return new TryFailure(t);\n            }\n        } else {\n            return this;\n        }\n    }\n\n    public onFailure(action: (error: Error) => void): Try<T> {\n        if (this.isFailure()) {\n            action(this.getCause());\n        }\n        return this;\n    }\n\n    public onSuccess(action: (value: T) => void): Try<T> {\n        if (this.isSuccess()) {\n            try {\n                action(this.get());\n            } catch (e) {\n                return new TryFailure(e);\n            }\n        }\n        return this;\n    }\n\n    public orElse(callable: () => Try<T>): Try<T> {\n        if (this.isSuccess()) {\n            return this;\n        } else {\n            try {\n                return callable();\n            } catch (x) {\n                return new TryFailure(x);\n            }\n        }\n    }\n\n    public recover(exceptionType: Function, recoveryFunction: () => T): Try<T> {\n        if (this.isFailure()) {\n            if ((<any>this.getCause()).constructor === exceptionType) {\n                return Try.of(() => recoveryFunction());\n            }\n        }\n        return this;\n    }\n\n    abstract get(): T;\n\n    abstract getCause(): Error;\n\n    abstract isFailure(): boolean;\n\n    abstract isSuccess(): boolean;\n\n}\n\nclass TrySuccess<T> extends Try<T> {\n    constructor(private value: T) {\n        super()\n    }\n\n    public get(): T {\n        return this.value;\n    }\n\n    public getCause(): Error {\n        throw new UnsupportedOperationError(\"getCause() on Success\");\n    }\n\n    public isFailure(): boolean {\n        return false;\n    }\n\n    public isSuccess(): boolean {\n        return true;\n    }\n\n    public toString(): string {\n        return \"Success(\" + this.value + \")\";\n    }\n}\n\nclass TryFailure<T> extends Try<T> {\n\n    constructor(private cause: Error) {\n        super();\n    }\n\n    public get(): T {\n        throw this.cause;\n    }\n\n    public getCause(): Error {\n        return this.cause;\n    }\n\n    public isFailure(): boolean {\n        return true;\n    }\n\n    public isSuccess(): boolean {\n        return false;\n    }\n\n    public toString(): string {\n        return \"Failure(\" + this.cause + \")\";\n    }\n}\n\nexport class NullPointerError extends Error {\n    constructor(message?: string) {\n        super(message);\n        (<any> this).__proto__ = NullPointerError.prototype;\n    }\n}\n\nexport class UndefinedError extends Error {\n    constructor(message?: string) {\n        super(message);\n        (<any> this).__proto__ = UndefinedError.prototype;\n    }\n}\n\n\nexport class NoSuchElementError extends Error {\n    constructor(message?: string) {\n        super(message);\n        (<any> this).__proto__ = NoSuchElementError.prototype;\n    }\n}\n\nexport class UnsupportedOperationError extends Error {\n    constructor(message?: string) {\n        super(message);\n        (<any> this).__proto__ = UnsupportedOperationError.prototype;\n    }\n}","export class CaseTransformer {\n\n    static kebabToCamelCase(name: string): string {\n        return name.replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n    }\n\n    static camelToKebabCase(name: string): string {\n        return name.replace(/[A-Z]/g, (g) => '-' + g[0].toLowerCase());\n    }\n\n    static camelCaseToColonCase(name: string): string {\n        return name.replace(/[A-Z]/g, (g) => ':' + g[0].toLowerCase());\n    }\n}","export const buffer = (fn: Function, ms: number, returnPromise: boolean = true) => {\n\n    let currentPromise: Promise<any>|null;\n    let resolveFn: Function;\n\n    const guaranteePromise = () => {\n        if (!currentPromise) {\n            currentPromise = new Promise((resolve) => {\n                resolveFn = resolve;\n            });\n        }\n        return currentPromise;\n    };\n\n    const invalidatePromise = () => {\n        currentPromise = null;\n    };\n\n    const bufferedFn = function(...args: any) {\n\n        let returnValue;\n        let guaranteedPromise = guaranteePromise();\n\n        // ms\n        const bufferTime: number = Reflect.get(bufferedFn, 'BUFFER_TIME') || 0;\n        const lastCallTimestamp: number = Reflect.get(bufferedFn, 'BUFFER_LAST_CALL') || 0;\n\n        if (!lastCallTimestamp || lastCallTimestamp < (Date.now() - bufferTime)) {\n\n            returnValue = fn(...args);\n\n            Reflect.set(bufferedFn, 'BUFFER_LAST_CALL', Date.now());\n\n            if (returnPromise) {\n                resolveFn(returnValue);\n            }\n            invalidatePromise();\n        }\n\n        if (returnPromise) {\n            return guaranteedPromise;\n        } else {\n            return returnValue;\n        }\n    };\n\n    Reflect.set(bufferedFn, 'BUFFER_TIME', ms);\n\n    return bufferedFn;\n};","import {buffer} from \"../function/buffer\";\n\nexport const Buffer = (ms: number, returnPromise: boolean = true) => {\n\n    return function (target: any, methodName: string, descriptor: PropertyDescriptor) {\n\n        descriptor.value = buffer(target[methodName], ms, returnPromise);\n    };\n};","export class Comparator {\n\n    /**\n     * Compares two objects by equaling all own property types and values.\n     */\n    public static isEqual(a: any, b: any, type: CompareType = CompareType.EQUAL): boolean {\n\n        a = Comparator.toPrimitive(a);\n        b = Comparator.toPrimitive(b);\n\n        if (a === b) {\n\n            return true;\n\n        } else if (\n            (typeof a == \"object\" && a != null) &&\n            (typeof b == \"object\" && b != null)\n        ) {\n\n            const aKeys = Object.keys(a);\n            const aKeyLength = aKeys.length;\n            const bKeyLength = Object.keys(b).length;\n\n            // same amount of properties\n            if (type === CompareType.EQUAL && aKeyLength !== bKeyLength\n                // length of properties of a bigger than properties are missing\n                || type === CompareType.PARTIALLY_EQUAL && aKeyLength > bKeyLength) {\n                return false;\n            }\n\n            for (const prop of aKeys) {\n\n                // check if b has the property of a and check the value\n                if (b.hasOwnProperty(prop) &&\n                    Comparator.isEqual(a[prop], b[prop], type)) {\n\n                    continue;\n                }\n\n                // don't has the property or not equal\n                return false;\n            }\n\n            // everything is equal\n            return true;\n        }\n\n        // maybe null or undefined\n        return false;\n    }\n\n    private static toPrimitive(value: any): any {\n\n        if (value !== null && typeof value === 'object') {\n            return value.valueOf();\n        }\n        return value;\n    }\n}\n\nexport enum CompareType {\n    PARTIALLY_EQUAL,\n    EQUAL\n}","import {Comparator} from \"../object/Comparator\";\n\nexport const memoize = (fn: Function, ignoreArguments: Array<number> = []) => {\n\n    let memoizedReturnValue: any;\n    let previousArguments: Array<any> = [];\n\n    const callFunction = (...args: any) => {\n        memoizedReturnValue = fn(...args);\n        previousArguments = args || [];\n    };\n\n    return function(...args: any) {\n\n        // optimization: arguments length differ\n        if (previousArguments.length !== args.length) {\n            callFunction(...args);\n        } else {\n\n            // arguments length is the same, but contents may differ\n            for (let i=0; i<args.length; i++) {\n\n                // may fall through by not checking certain arguments\n                if (ignoreArguments.indexOf(i) !== -1) continue;\n\n                // if all arguments are equal, nothing happens (return of memoized result value)\n                if (!Comparator.isEqual(args[i], previousArguments[i])) {\n                    callFunction(...args);\n                    break;\n                }\n            }\n        }\n\n        if (typeof memoizedReturnValue === 'object') {\n            Reflect.set(memoizedReturnValue, 'IS_MEMORIZED_RETURN_VALUE', true);\n        }\n        return memoizedReturnValue;\n    };\n};","import {memoize} from \"../function/memoize\";\n\nexport const Memoize = (target: any, methodName: string, descriptor: PropertyDescriptor) => {\n\n    descriptor.value = memoize(target[methodName]);\n};","import {ApplicationContext} from \"../../../di\";\nimport {buffer} from \"./buffer\";\n\ninterface FunctionCallTimeStack {\n    [functionName: string]: Array<number>;\n}\n\ninterface FunctionCallTimeAvgResult {\n    [functionName: string]: number;\n}\n\ninterface FunctionCallAmount {\n    [functionName: string]: number;\n}\n\nexport const measureSpeed = (name: string, fn: Function) => {\n\n    const aggregateTimings = buffer(() => {\n\n        const callTimings: FunctionCallTimeStack =\n            ApplicationContext.getGlobal('MEASURE_SPEED_CALL_STACK_TIMING_TMP') || {};\n\n        const callAvg: FunctionCallTimeAvgResult =\n            ApplicationContext.getGlobal('MEASURE_PERFORMANCE_CALL_TIME_AVERAGE') || {};\n\n        const callAmount: FunctionCallAmount =\n            ApplicationContext.getGlobal('MEASURE_PERFORMANCE_CALL_AMOUNT') || {};\n\n        if (!callAmount[name]) {\n            callAmount[name] = 0;\n        }\n\n        callAmount[name] += callTimings[name].length;\n\n        if (callAvg[name]) {\n            callTimings[name].push(callAvg[name]);\n        }\n\n        callAvg[name] = callTimings[name].reduce(\n            (previousTiming: number, currentTiming: number) => previousTiming + currentTiming)\n                / (callTimings[name].length);\n\n        // reset timing stack\n        callTimings[name] = [];\n\n        ApplicationContext.setGlobal('MEASURE_PERFORMANCE_CALL_TIME_AVERAGE', callAvg);\n        ApplicationContext.setGlobal('MEASURE_PERFORMANCE_CALL_AMOUNT', callAmount);\n\n        ApplicationContext.setGlobal('MEASURE_SPEED_CALL_STACK_TIMING_TMP', callTimings);\n\n    }, 100);\n\n    return function(...args: any) {\n\n        const callTimings: FunctionCallTimeStack =\n            ApplicationContext.getGlobal('MEASURE_SPEED_CALL_STACK_TIMING_TMP') || {};\n\n        if (!callTimings[name]) {\n            callTimings[name] = [];\n        }\n\n        const start = performance.now();\n        const returnValue = fn(...args);\n        const end = performance.now();\n\n        callTimings[name].push(end - start);\n\n        ApplicationContext.setGlobal('MEASURE_SPEED_CALL_STACK_TIMING_TMP', callTimings);\n\n        aggregateTimings();\n\n        return returnValue;\n    };\n};","import {measureSpeed} from \"../function/measureSpeed\";\n\nexport const MeasureSpeed = (target: any, methodName: string, descriptor: TypedPropertyDescriptor<any>) => {\n\n    descriptor.value = measureSpeed(target.constructor.name + '.' + methodName, target[methodName]);\n};","export const isMemorizedReturnValue = (value: any): boolean => {\n    return Reflect.get(value, 'IS_MEMORIZED_RETURN_VALUE');\n};","export const delay = (fn: Function, ms: number) => {\n\n    return function(...args: any) {\n\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(fn(...args));\n            }, ms);\n        });\n    };\n};","export * from \"./src/interface/Partial\";\nexport * from \"./src/interface/Merge\";\nexport * from \"./src/interface/Omit\";\nexport * from \"./src/random/Randomizer\";\nexport * from \"./src/reflect/Method\";\nexport * from \"./src/util/Try\";\nexport * from \"./src/string/CaseTransformer\";\nexport * from \"./src/function/buffer\";\nexport * from \"./src/decorator/Buffer\";\nexport * from \"./src/function/memoize\";\nexport * from \"./src/decorator/Memoize\";\nexport * from \"./src/function/measureSpeed\";\nexport * from \"./src/decorator/MeasureSpeed\";\nexport * from \"./src/function/isMemorizedReturnValue\";\nexport * from \"./src/function/delay\";","// in order of chattiness\nexport enum LogLevel {\n    NONE = \"NONE\",\n    ERROR = \"ERROR\",\n    WARN = \"WARN\",\n    DEBUG = \"DEBUG\",\n    LOG = \"LOG\",\n    INFO = \"INFO\",\n    TRACE = \"TRACE\",\n}","import {LogLevel} from \"../..\";\n\nexport const getLogLevelSeverity = (logLevel: LogLevel): number => {\n    switch (logLevel) {\n        case LogLevel.NONE:\n            return 0;\n        case LogLevel.ERROR:\n            return 1;\n        case LogLevel.WARN:\n            return 2;\n        case LogLevel.DEBUG:\n            return 3;\n        default:\n        case LogLevel.LOG:\n            return 4;\n        case LogLevel.INFO:\n            return 5;\n        case LogLevel.TRACE:\n            return 6;\n    }\n};","import {LogLevel} from \"../..\";\nimport {getLogLevelSeverity} from \"./getLogLevelSeverity\";\n\nexport const filterByLogLevel = (args: Array<any>, logLevel: LogLevel, methodLogLevel: LogLevel): Array<any> => {\n\n    const loggingSeverity = getLogLevelSeverity(logLevel);\n    const actualMethodSeverity = getLogLevelSeverity(methodLogLevel);\n\n    // numb logging output because e.g. method severity (log() = LOG = 4 is lower than logging severity set (ERROR = 1)\n    if (actualMethodSeverity > loggingSeverity) {\n        return [];\n    }\n    return args;\n}","export enum LoggerImplType {\n    CONSOLE = \"CONSOLE\"\n}","import {LoggerConfig} from \"./interface/LoggerConfig\";\nimport {LoggerImplType} from \"./enum/LoggerImplType\";\nimport {LogLevel} from \"./enum/LogLevel\";\n\nexport const defaultLoggerConfig: LoggerConfig = {\n    type: LoggerImplType.CONSOLE,\n    level: LogLevel.LOG\n};","import {Component} from \"../../../di/index\";\nimport {LoggerImpl} from \"../interface/LoggerImpl\";\nimport {LogLevel} from \"../enum/LogLevel\";\nimport {LogFilterFunction} from \"../interface/LogFilterFunction\";\n\n@Component\nexport class ConsoleLoggerImpl implements LoggerImpl {\n\n    private level!: LogLevel;\n    private filter!: LogFilterFunction|undefined;\n    \n    setLogLevel(level: LogLevel) {\n        this.level = level;\n    }\n\n    setFilterFunction(filter?: LogFilterFunction) {\n        this.filter = filter;\n    }\n\n    getLogLevel(): LogLevel {\n        return this.level;\n    }\n    getFilterFunction(): LogFilterFunction|undefined {\n        return this.filter;\n    };\n    \n    log(...args: Array<any>): void {\n        console.log(...args);\n    }\n\n    trace(...args: Array<any>): void {\n        console.trace(...args);\n    }\n\n    error(...args: Array<any>): void {\n        console.error(...args);\n    }\n\n    warn(...args: Array<any>): void {\n        console.warn(...args);\n    }\n\n    debug(...args: Array<any>): void {\n        console.debug(...args);\n    }\n\n    info(...args: Array<any>): void {\n        console.info(...args);\n    }\n}","import {LoggerImpl} from \"../interface/LoggerImpl\";\nimport {LoggerConfig} from \"../..\";\nimport {ConsoleLoggerImpl} from \"../impl/ConsoleLoggerImpl\";\nimport {LoggerImplType} from \"../enum/LoggerImplType\";\n\nexport const getLoggerImplInstance = (loggerConfig: LoggerConfig): LoggerImpl => {\n\n    let loggerImpl: LoggerImpl;\n\n    // custom impl provided via config\n    if (loggerConfig.impl) {\n\n        loggerImpl = loggerConfig.impl;\n\n    } else {\n\n        // using standard implementation\n        switch (loggerConfig.type) {\n\n            default:\n            case LoggerImplType.CONSOLE:\n                loggerImpl = new ConsoleLoggerImpl();\n                break;\n        }\n    }\n    loggerImpl.setLogLevel(loggerConfig.level!);\n    loggerImpl.setFilterFunction(loggerConfig.filter);\n\n    return loggerImpl;\n};","import {ApplicationContext} from \"../../../di\";\nimport {LoggerImpl} from \"../interface/LoggerImpl\";\nimport {defaultLoggerConfig} from \"../defaultLoggerConfig\";\nimport {getLoggerImplInstance} from \"../function/getLoggerImplInstance\";\nimport {LoggerConfig} from \"../..\";\n\nconst LOGGER = 'LOGGER';\n\nexport const getLogger = (): LoggerImpl => {\n\n    let loggerImpl = ApplicationContext.getInstance().get(LOGGER);\n\n    if (!loggerImpl) {\n        setLogger(defaultLoggerConfig);\n    }\n    return ApplicationContext.getInstance().get(LOGGER);\n};\n\nexport const setLogger = (appLoggerConfig: LoggerConfig): void => {\n    ApplicationContext.getInstance().set(LOGGER, getLoggerImplInstance(appLoggerConfig));\n};\n\n","import {LoggerImpl} from \"./interface/LoggerImpl\";\nimport {Component} from \"../../di\";\nimport {LogFilterFunction} from \"./interface/LogFilterFunction\";\nimport {LogLevel} from \"./enum/LogLevel\";\nimport {filterByLogLevel} from \"./function/filterByLogLevel\";\nimport {getLogger} from \"./context/logger\";\n\n/**\n * Logger to inject which uses the decorator-provided application logger (@AppLogger(...))\n * or falls back to the default configuration (default/DefaultAppLoggerConfig.ts).\n *\n * Inject this Logger in any class using:\n *\n * constructor(protected logger: Logger) { ... }\n */\n@Component\nexport class ActiveLogger implements LoggerImpl {\n\n    protected _loggerImpl!: LoggerImpl;\n\n    private filterArgs(args: Array<any>, methodLogLevel: LogLevel): Array<any> {\n\n        let filteredArgs = filterByLogLevel(args, this.getLogLevel(), methodLogLevel);\n        const customFilterFn = this.getFilterFunction();\n\n        if (typeof customFilterFn === 'function') {\n            filteredArgs = customFilterFn(filteredArgs);\n        }\n        return filteredArgs;\n    }\n\n    get loggerImpl(): LoggerImpl {\n\n        // fetch cached instance\n        if (this._loggerImpl) return this._loggerImpl;\n\n        const appLoggerImpl = getLogger();\n\n        if (appLoggerImpl) {\n            this._loggerImpl = appLoggerImpl;\n        }\n        return this._loggerImpl;\n    }\n\n    log(...args: Array<any>): void {\n\n        const filteredArgs = this.filterArgs(args, LogLevel.LOG);\n\n        if (filteredArgs.length) {\n            this.loggerImpl.log(...filteredArgs);\n        }\n    }\n\n    trace(...args: Array<any>): void {\n\n        const filteredArgs = this.filterArgs(args, LogLevel.TRACE);\n\n        if (filteredArgs.length) {\n            this.loggerImpl.trace(...filteredArgs);\n        }\n    }\n\n    error(...args: Array<any>): void {\n\n        const filteredArgs = this.filterArgs(args, LogLevel.ERROR);\n\n        if (filteredArgs.length) {\n            this.loggerImpl.error(...filteredArgs);\n        }\n    }\n\n    warn(...args: Array<any>): void {\n\n        const filteredArgs = this.filterArgs(args, LogLevel.WARN);\n\n        if (filteredArgs.length) {\n            this.loggerImpl.warn(...filteredArgs);\n        }\n    }\n\n    debug(...args: Array<any>): void {\n\n        const filteredArgs = this.filterArgs(args, LogLevel.DEBUG);\n\n        if (filteredArgs.length) {\n            this.loggerImpl.debug(...filteredArgs);\n        }\n    }\n\n    info(...args: Array<any>): void {\n\n        const filteredArgs = this.filterArgs(args, LogLevel.INFO);\n\n        if (filteredArgs.length) {\n            this.loggerImpl.info(...filteredArgs);\n        }\n    }\n\n    setLogLevel(level: LogLevel): void {\n        this.loggerImpl.setLogLevel(level);\n    }\n\n    setFilterFunction(filter?: LogFilterFunction): void {\n        this.setFilterFunction(filter);\n    }\n\n    getLogLevel(): LogLevel {\n        return this.loggerImpl.getLogLevel();\n    }\n\n    getFilterFunction(): LogFilterFunction|undefined {\n        return this.loggerImpl.getFilterFunction();\n    };\n}","import {LoggerConfig} from \"../interface/LoggerConfig\";\nimport {setLogger} from \"../context/logger\";\n\nexport function Logger(loggerConfig: LoggerConfig): any {\n\n    // called with @AppLogger() or @AppLogger({})\n    if (!(typeof loggerConfig === 'function')) {\n\n        return (target: any) => {\n            setLogger(loggerConfig);\n            return target;\n        }\n    }\n}","import {ApplicationContext} from \"../../../di\";\nimport {ActiveLogger} from \"../ActiveLogger\";\n\nexport const log = (...args: Array<any>) => {\n    ApplicationContext.getInstance().getBean(ActiveLogger).log(...args);\n};","import {ActiveLogger} from \"../ActiveLogger\";\nimport {ApplicationContext} from \"../../../di\";\n\nexport const info = (...args: Array<any>) => {\n    ApplicationContext.getInstance().getBean(ActiveLogger).info(...args);\n};","import {ActiveLogger} from \"../ActiveLogger\";\nimport {ApplicationContext} from \"../../../di\";\n\nexport const warn = (...args: Array<any>) => {\n    ApplicationContext.getInstance().getBean(ActiveLogger).warn(...args);\n};","import {ActiveLogger} from \"../ActiveLogger\";\nimport {ApplicationContext} from \"../../../di\";\n\nexport const debug = (...args: Array<any>) => {\n    ApplicationContext.getInstance().getBean(ActiveLogger).debug(...args);\n};","import {ActiveLogger} from \"../ActiveLogger\";\nimport {ApplicationContext} from \"../../../di\";\n\nexport const error = (...args: Array<any>) => {\n    ApplicationContext.getInstance().getBean(ActiveLogger).error(...args);\n};","import {ActiveLogger} from \"../ActiveLogger\";\nimport {ApplicationContext} from \"../../../di\";\n\nexport const trace = (...args: Array<any>) => {\n    ApplicationContext.getInstance().getBean(ActiveLogger).trace(...args);\n};","export * from \"./src/ActiveLogger\";\nexport * from \"./src/decorator/Logger\";\nexport * from \"./src/interface/LoggerConfig\";\nexport * from \"./src/enum/LogLevel\";\nexport * from \"./src/interface/LogFilterFunction\";\nexport * from \"./src/function/log\";\nexport * from \"./src/function/info\";\nexport * from \"./src/function/warn\";\nexport * from \"./src/function/debug\";\nexport * from \"./src/function/error\";\nexport * from \"./src/function/trace\";\nexport * from \"./src/interface/LoggerImpl\";\nexport * from \"./src/context/logger\";","export const FRAGMENT_ELEMENT_TAG_NAME = 'st-fragment';\nexport const SLOT_ELEMENT_TAG_NAME = 'st-slot';\nexport const LIST_KEY_ATTRIBUTE_NAME = 'key';","import {VirtualElement} from \"../../index\";\n\nexport const transformElementToVirtualElement = (element: Element): VirtualElement|string => {\n\n    const virtualAttributes: { [attributeName: string]: any } = {};\n    const virtualChildren: Array<VirtualElement|string> = [];\n\n    if (element.nodeType !== Node.TEXT_NODE) {\n\n        if (element.attributes) {\n\n            const attributes: Array<Attr> = Array.from(element.attributes);\n\n            for (let i=0; i<attributes.length; i++) {\n                virtualAttributes[attributes[i].name] = attributes[i].value;\n            }\n        }\n\n        if (element.childNodes) {\n\n            for (let i=0; i<element.childNodes.length; i++) {\n                virtualChildren.push(transformElementToVirtualElement(element.childNodes[i] as Element));\n            }\n        }\n\n        return {\n            name: element.tagName.toLowerCase(),\n            attributes: virtualAttributes,\n            children: virtualChildren\n        }\n\n    } else {\n        return element.textContent || '';\n    }\n};","import {VirtualElement} from \"../../index\";\n\nexport const transformToFlatElementList = (destination: Array<VirtualElement>, tsx: VirtualElement | Array<VirtualElement> | any) => {\n\n    if (Array.isArray(tsx)) {\n        tsx.forEach(tsx => destination.push(tsx));\n    } else {\n        destination.push(tsx)\n    }\n};","import {warn} from \"../../../logger\";\nimport {FRAGMENT_ELEMENT_TAG_NAME, VirtualElement} from \"../../index\";\nimport {measureSpeed} from \"../../../lang\";\n\nexport class VirtualDOMTransformer {\n\n    static transformVirtualElementAttributes = (virtualElement: VirtualElement) => {\n\n        // transform attributes\n        if (virtualElement.attributes) {\n\n            const mutatedAttributes: {\n                [attributeName: string]: any;\n            } = {};\n\n            for (let attributeName in virtualElement.attributes) {\n\n                if (virtualElement.attributes.hasOwnProperty(attributeName)) {\n\n                    let mutatedAttributeName = attributeName;\n\n                    // 1. Transform React className -> class\n                    if (attributeName.toLowerCase() === 'classname') {\n                        mutatedAttributeName = 'class';\n                    }\n\n                    mutatedAttributes[mutatedAttributeName] =\n                        virtualElement.attributes[attributeName];\n                }\n\n            }\n            virtualElement.attributes = mutatedAttributes;\n        }\n    };\n\n    static transformVirtualElementList = (parent: VirtualElement, childrenDestination: Array<VirtualElement|string>, list: Array<VirtualElement|string>) => {\n\n        for (let i=0; i<list.length; i++) {\n\n            if (typeof list[i] !== 'string' &&\n                (!(list[i] as VirtualElement).attributes || typeof (list[i] as VirtualElement).attributes.key === 'undefined')) {\n                warn('The element ', parent, ' is a list (Array). Each entry in a list must have an unique \"key\" attribute like: key=\"$index\". But ', list[i], 'is missing it.');\n            }\n\n            childrenDestination.push(list[i]);\n        }\n    };\n\n    static transformVirtualElementTree = measureSpeed('transformVirtualElementTree', (virtualElement: VirtualElement|string): VirtualElement|string => {\n\n        if (typeof virtualElement === 'object') {\n\n            VirtualDOMTransformer.transformVirtualElementAttributes(virtualElement);\n\n            // make sure it's a true VirtualElement, not a text node and has children to walk thru\n            if (virtualElement && virtualElement.children) {\n\n                const nonFragmentChildren = [];\n\n                // 1. Filter / aggregate elements that are not <st-fragment>'s\n                for (let i=0; i<virtualElement.children.length; i++) {\n\n                    const virtualElementChild = VirtualDOMTransformer.transformVirtualElementTree(\n                        virtualElement.children[i]\n                    ) as VirtualElement;\n\n                    if (typeof virtualElementChild === 'object') {\n\n                        if (virtualElementChild.name === FRAGMENT_ELEMENT_TAG_NAME &&\n                            virtualElementChild.children && virtualElementChild.children.length) {\n\n                            for (let j=0; j<virtualElementChild.children.length; j++) {\n\n                                // TODO: abstract logic\n                                // flatten lists\n                                if (Array.isArray(virtualElementChild.children[j])) {\n\n                                    VirtualDOMTransformer.transformVirtualElementList(\n                                        virtualElement, nonFragmentChildren, virtualElementChild.children[j]\n                                    );\n\n                                } else {\n\n                                    nonFragmentChildren.push(\n                                        VirtualDOMTransformer.transformVirtualElementTree(virtualElementChild.children[j])\n                                    );\n                                }\n                            }\n\n                        } else {\n\n                            // flatten lists\n                            if (Array.isArray(virtualElementChild)) {\n\n                                VirtualDOMTransformer.transformVirtualElementList(\n                                    virtualElement, nonFragmentChildren, virtualElementChild\n                                );\n\n                            } else {\n\n                                nonFragmentChildren.push(virtualElementChild);\n                            }\n                        }\n                    } else {\n                        nonFragmentChildren.push(virtualElementChild);\n                    }\n                }\n                virtualElement.children = nonFragmentChildren;\n            }\n        }\n        return virtualElement;\n    });\n}","export enum RendererImplType {\n    TSX = \"TSX\"\n}","import {RendererImplType} from \"./enum/RendererImplType\";\nimport {RendererConfig} from \"../index\";\n\nexport const defaultRendererConfig: RendererConfig = {\n    type: RendererImplType.TSX\n};","export const DEFAULT_NAMESPACE_DELIMITER: string = ':';\nexport const DEFAULT_NAMESPACE_NAME: string = 'xmlns';\nexport const DOM_ELEMENT_INJECT_ATTRIBUTE_NAME = 'inject';","import {NamespaceAttribute} from \"../interface/NamespaceAttribute\";\nimport {DEFAULT_NAMESPACE_DELIMITER} from \"../constants\";\nimport {CaseTransformer} from \"../../../../../lang\";\n\nconst NS_INDICATOR_ATTRIBUTES = [\n    'xmlnsXlink',\n    'xmlnsSvgjs',\n    'xlinkHref',\n    'xlinkActuate',\n    'xlinkArcrole',\n    'xlinkRole',\n    'xlinkShow',\n    'xlinkTitle',\n    'xlinkType',\n    'xmlBase',\n    'xmlLang',\n    'xmlSpace',\n];\n\nexport const parseAttributeNS = (name: string): NamespaceAttribute => {\n\n    if (!!name && NS_INDICATOR_ATTRIBUTES.indexOf(name) > -1) {\n\n        const nsParts = CaseTransformer.camelCaseToColonCase(name).split(DEFAULT_NAMESPACE_DELIMITER)\n            .filter(nsPart => !!nsPart);\n\n        if (nsParts.length == 2) {\n\n            return {\n                found: true,\n                name: nsParts[1],\n                ns: nsParts[2]\n            };\n        }\n    }\n\n    return {\n        found: false,\n        name: name\n    };\n};","import {Namespace} from \"../interface/Namespace\";\nimport {NamespaceAttributesMap} from \"../interface/NamespaceAttributesMap\";\nimport {Attribute} from \"../interface/Attribute\";\nimport {DEFAULT_NAMESPACE_DELIMITER, DEFAULT_NAMESPACE_NAME, DOM_ELEMENT_INJECT_ATTRIBUTE_NAME} from \"../constants\";\nimport {CaseTransformer} from \"../../../../../lang/src/string/CaseTransformer\";\nimport {parseAttributeNS} from \"./parseAttributeNS\";\n\nexport const collectNamespaceAttributes = (attributes: Object, knownNamespaces: Array<Namespace>): NamespaceAttributesMap => {\n\n    let collectedNamespaceAttributes: Array<Attribute> = [];\n\n    // 0. transform TSX attribute names (like: \"className\") back to standard attribute names (\"class\")\n    const transformedAttributes: Attribute[] = Object.entries(attributes)\n        .map(([name, value]): Attribute => ({\n            name,\n            value\n        }));\n\n    // 0.1 collect all possible namespace attributes\n\n    // order required\n\n    // 1. filter all namespaces\n    const rawXmlNs = transformedAttributes.filter((attribute: Attribute) =>\n        attribute.name.indexOf(DEFAULT_NAMESPACE_NAME) == 0);\n\n    // 1.1 get namespace values\n    const xmlNs = knownNamespaces.concat(\n\n        rawXmlNs\n            .map((attribute) => {\n                if (parseAttributeNS(attribute.name).found) {\n                    return {\n                        name: CaseTransformer.camelCaseToColonCase(attribute.name)\n                            .split(DEFAULT_NAMESPACE_DELIMITER).filter(s => !!s).pop() || '',\n                        value: attribute.value\n                    };\n                } else {\n                    return {\n                        name: attribute.name.split(DEFAULT_NAMESPACE_DELIMITER).filter(s => !!s).pop() || '',\n                        value: attribute.value\n                    };\n                }\n            })\n            .filter((attrib) => !!attrib.name)\n    );\n\n    collectedNamespaceAttributes = collectedNamespaceAttributes.concat(rawXmlNs);\n\n    // 3. filter all DOM element injections\n    const injections = transformedAttributes\n        .filter(e => collectedNamespaceAttributes.indexOf(e) < 0)\n        .filter((attribute) =>\n            DOM_ELEMENT_INJECT_ATTRIBUTE_NAME === attribute.name);\n\n    collectedNamespaceAttributes = collectedNamespaceAttributes.concat(injections);\n\n    // 4. filter all events\n    let event = transformedAttributes\n        .filter(e => collectedNamespaceAttributes.indexOf(e) < 0)\n        .filter((attribute: Attribute) =>\n            attribute.name.startsWith('on') &&\n            typeof attribute.value === 'function');\n\n    collectedNamespaceAttributes = collectedNamespaceAttributes.concat(event);\n\n    // 5. filter all properties\n    const property = transformedAttributes\n        .filter(e => collectedNamespaceAttributes.indexOf(e) < 0)\n        .filter((attribute: Attribute) =>\n            typeof attribute.value !== 'string' &&\n            typeof attribute.value !== 'number' &&\n            typeof attribute.value !== 'boolean');\n\n    collectedNamespaceAttributes = collectedNamespaceAttributes.concat(property);\n\n    // 6. filter all html\n    const html = transformedAttributes\n        .filter(e => collectedNamespaceAttributes.indexOf(e) < 0)\n        .filter((attribute: Attribute) =>\n            typeof attribute.value === 'string' ||\n            typeof attribute.value === 'number' ||\n            typeof attribute.value === 'boolean');\n\n    collectedNamespaceAttributes = collectedNamespaceAttributes.concat(html);\n\n    return {\n        injections: injections,\n        xmlNs: xmlNs,\n        event: event.map(\n            (attribute: Attribute) =>\n                <[string, Function]>([\n                    attribute.name.substring(2, attribute.name.length).toLowerCase(), attribute.value\n                ])\n        ),\n        property: property,\n        html: html,\n        other: transformedAttributes.filter(e => collectedNamespaceAttributes.indexOf(e) < 0)\n    }\n};\n","export const getInternalRenderApi = () => {\n    return (<any>window).ActiveRenderer;\n};","import {AbstractWeakMapReflector} from \"../../../../di/index\";\n\nexport class FlowIdReflector extends AbstractWeakMapReflector {\n\n    protected static get REFLECTOR_NAME() {\n        return 'FlowIdReflector'\n    };\n\n    static set(node: Node, id: number) {\n        return super.set(node, id);\n    }\n\n    static get(node: Node): number {\n        return super.get(node) || -1;\n    }\n\n    static has(node: Node): boolean {\n        return super.has(node);\n    }\n}","import {RendererImpl} from \"../interface/RendererImpl\";\nimport {ActiveLogger, Component, FRAGMENT_ELEMENT_TAG_NAME, VirtualElement} from \"../../../../index\";\nimport {parseAttributeNS} from \"./tsx-to-html-renderer-impl/function/parseAttributeNS\";\nimport {NamespaceAttributesMap} from \"./tsx-to-html-renderer-impl/interface/NamespaceAttributesMap\";\nimport {collectNamespaceAttributes} from \"./tsx-to-html-renderer-impl/function/collectNamespaceAttributes\";\nimport {Namespace} from \"./tsx-to-html-renderer-impl/interface/Namespace\";\nimport {Attribute} from \"./tsx-to-html-renderer-impl/interface/Attribute\";\nimport {RuntimeDOMAttributeCacheMap} from \"./tsx-to-html-renderer-impl/interface/RuntimeDOMAttributeCacheMap\";\nimport {NamespaceAttribute} from \"./tsx-to-html-renderer-impl/interface/NamespaceAttribute\";\nimport {getInternalRenderApi} from \"../function/getInternalRenderApi\";\nimport {FlowIdReflector} from \"../../../webcomponent/src/reflector/cross-instance/FlowIdReflector\";\nimport {DEFAULT_NAMESPACE_NAME} from \"./tsx-to-html-renderer-impl/constants\";\n\n@Component\nexport class TSXToHTMLRendererImpl implements RendererImpl {\n\n    /**\n     * WebComponent observeAttributes observeAttributes heap cache.\n     * Global cache. Used for intermediate value transmission.\n     * Memory is freed directly after the atomic transmission\n     * operation (DOM -> WebComponent JS instance) has ended.\n     */\n    attributeValueCache: RuntimeDOMAttributeCacheMap = {};\n\n    /**\n     * Constantly incremented sequence to address a certain attribute\n     * observeAttributes in transmission between DOM and WebComponent JS instance.\n     */\n    protected attributeValueSequence: number = 0;\n\n    /**\n     * Original DOM/native createElement implementation reference.\n     */\n    protected _createDOMElement: any = document.createElement.bind(document);\n    protected _createDOMElementNS: any = document.createElementNS.bind(document);\n\n    constructor(public activeLogger: ActiveLogger) {\n        this.init();\n    }\n\n    cleanCaches() {\n        this.attributeValueCache = {};\n        this.attributeValueSequence = 0;\n    }\n\n    init() {\n\n        // tsconfig.json tsx -> preserve\n        // implement React TSX rendering API\n        // (used globally by TypeScript compiler --jsx emitted code)\n        (<any>window).ActiveRenderer = this;\n\n        // assign at global scope for the native DOM functions to instantiate\n        // WebComponents using this TSX renderer\n        document.createElement = getInternalRenderApi().render.bind(\n            getInternalRenderApi().createElement.bind((getInternalRenderApi()))\n        );\n    }\n\n    createNativeElement(virtualElementOrString: VirtualElement|string, flowId: number): Element {\n        return (<any>window).ActiveRenderer.render(virtualElementOrString, 0, [], flowId);\n    }\n\n    createNativeTextNode(data: string, flowId: number): Node {\n        const textNode = document.createTextNode(data);\n        FlowIdReflector.set(textNode, flowId);\n        return textNode;\n    }\n\n    protected generateUniqueAttributeValueId = (): string => {\n        return 'attr-' + (++(<any>window).ActiveRenderer.attributeValueSequence);\n    };\n\n    protected appendChild = (child: string | number | boolean | Node | Array<Node>, element: Node) => {\n\n        let childToAppend = child;\n\n        if (child instanceof Node) {\n\n            childToAppend = child;\n\n        } else if (\n            typeof child == 'string' ||\n            typeof child == 'number' ||\n            typeof child == 'boolean'\n        ) {\n            childToAppend = document.createTextNode(child.toString());\n        }\n        if (childToAppend instanceof Node) {\n\n            return element.appendChild(\n                childToAppend\n            )\n        }\n    };\n\n    createDOMElement(tagName: string, namespaces: Array<Namespace> = [], nativeOptions?: any): Element {\n\n        const namespaceAttribute: NamespaceAttribute = parseAttributeNS(tagName);\n        const namespaceTagName = namespaceAttribute.name;\n\n        if (namespaceAttribute.found) {\n\n            const namespace = namespaces.find((ns) => namespaceAttribute.ns === ns.name);\n\n            if (namespace) {\n                return this._createDOMElementNS(namespace.value, namespaceTagName, nativeOptions);\n            }\n\n            this.activeLogger.error(\"No namespace found for attribute \", namespaceAttribute.ns, namespaceAttribute);\n\n            return this._createDOMElementNS(null, namespaceTagName, nativeOptions);\n        }\n\n        const defaultNamespace = namespaces.find((ns) => DEFAULT_NAMESPACE_NAME === ns.name);\n\n        if (defaultNamespace) {\n            return this._createDOMElementNS(defaultNamespace.value, namespaceTagName, nativeOptions);\n        } else {\n            return this._createDOMElement(namespaceTagName, nativeOptions);\n        }\n    };\n\n    setAttribute(element: Element, attribute: Attribute, namespaces: Namespace[]): void {\n\n        const namespaceAttribute = parseAttributeNS(attribute.name);\n        const attributeName = namespaceAttribute.name;\n\n        if (namespaceAttribute.found || namespaces.length > 0) {\n\n            const namespace: Namespace | undefined = namespaces\n                .find((ns) => namespaceAttribute.ns != undefined && namespaceAttribute.ns.startsWith(ns.name));\n\n            if (namespace) {\n                element.setAttributeNS(namespace.value, attributeName, attribute.value);\n            } else {\n                element.setAttributeNS(null, attributeName, attribute.value);\n            }\n        } else {\n            element.setAttribute(attributeName, attribute.value);\n        }\n    };\n\n    createElement(name: string, attributes?: any, ...children: Array<VirtualElement>): VirtualElement  {\n        return {\n            name: name,\n            attributes: attributes,\n            children: children\n        };\n    };\n\n    render = (virtualElementOrTagName: VirtualElement|string, level = 0, namespaces: Array<Namespace> = [], flowId: number = -1): Element => {\n\n        let name = typeof virtualElementOrTagName === 'string' ? virtualElementOrTagName : virtualElementOrTagName.name;\n        let attributes = (virtualElementOrTagName as VirtualElement).attributes || {};\n        let children = (virtualElementOrTagName as VirtualElement).children || [];\n\n        const nativeOptions = !!attributes.is ? {is: attributes.is} : undefined;\n\n        delete attributes.is;\n\n        const namespaceAttributes: NamespaceAttributesMap = collectNamespaceAttributes(attributes, namespaces);\n\n        // 0. add all namespaces\n        namespaces = namespaceAttributes.xmlNs;\n\n        const element = this.createDOMElement(name, namespaces, nativeOptions);\n\n        // ...and apply common flow process id (subtree re-flow identifier)\n        FlowIdReflector.set(element, flowId);\n\n        // 1. add all bindings\n        namespaceAttributes.injections.forEach((attribute: Attribute) => {\n\n            const scope: any = attribute.value;\n\n            for (let injectionFieldName in scope) {\n                if (scope.hasOwnProperty(injectionFieldName)) {\n                    const view = scope[injectionFieldName];\n                    view[injectionFieldName] = element;\n                }\n            }\n        });\n\n        // 2. add all events\n        namespaceAttributes.event.forEach(([eventName, callback]) => {\n\n            const eventListener = callback as EventListenerOrEventListenerObject;\n\n            //ElementEventListenersReflector.setEventListener(element, eventName, eventListener);\n\n            element.addEventListener(eventName, eventListener);\n        });\n\n        // 3. reference JS objects to properties heap cache (to de-reference them later and fetch the JS object again)\n        namespaceAttributes.property.forEach((attribute: Attribute) => {\n\n            const attributeValueId = this.generateUniqueAttributeValueId();\n\n            this.attributeValueCache[attributeValueId] = attribute.value;\n\n            this.setAttribute(element, {\n                name: attribute.name,\n                value: attributeValueId\n            }, namespaces);\n        });\n\n        // 4. add html stuff\n        namespaceAttributes.html.forEach((attribute: Attribute) => {\n            this.setAttribute(element, attribute, namespaces);\n        });\n\n        // 5. log error if attribute is not mappable\n        namespaceAttributes.other.forEach((attribute: Attribute) => {\n            this.activeLogger.error(`Attribute(${attribute.name}) on element ${name} cannot be mapped.`, attribute.value)\n        });\n\n        children.filter(child => !(child == null || typeof child == 'undefined')).forEach((child) => {\n\n            // child: string | number | boolean | Node | Array<Node>\n            const append = (child: any) => {\n\n                const _append = (child: any, element: Element) => {\n\n                    const childType = typeof child;\n\n                    if (childType == 'string' ||\n                        childType == 'number' ||\n                        childType == 'boolean' ||\n                        child instanceof Node\n                    ) {\n\n                        this.appendChild(child, element);\n\n                    } else {\n\n                        element.appendChild(this.render(child, level + 1, namespaces, flowId));\n                    }\n                };\n\n                // <st-fragment> found in sub-tree\n                if (child.name === FRAGMENT_ELEMENT_TAG_NAME) {\n\n                    // just don't render fragments, place their children one level up\n                    if (child.children) {\n                        child.children.forEach((childOfChild: any) => {\n                            _append(childOfChild, element);\n                        });\n                    }\n\n                } else {\n\n                    _append(child, element);\n                }\n            };\n\n            if (child instanceof Array) {\n\n                child.filter(child => !(child == null || typeof child == 'undefined'))\n                    .forEach(child => append(child))\n\n            } else {\n\n                append(child);\n            }\n        });\n\n        return element;\n    }\n}","import {RendererImplType} from \"../enum/RendererImplType\";\nimport {TSXToHTMLRendererImpl} from \"../impl/TSXToHTMLRendererImpl\";\nimport {ApplicationContext} from \"../../../di\";\nimport {RendererConfig} from \"../..\";\nimport {RendererImpl} from \"../interface/RendererImpl\";\n\nexport const getRendererImplInstance = (rendererConfig: RendererConfig): RendererImpl => {\n\n    let rendererImpl: RendererImpl;\n\n    // custom impl provided via config\n    if (rendererConfig.impl) {\n\n        rendererImpl = rendererConfig.impl;\n\n    } else {\n\n        // using standard implementation\n        switch (rendererConfig.type) {\n\n            default:\n            case RendererImplType.TSX:\n                rendererImpl = ApplicationContext.getInstance().getBean(TSXToHTMLRendererImpl);\n                break;\n        }\n    }\n    return rendererImpl;\n};","import {ApplicationContext} from \"../../../di\";\nimport {defaultRendererConfig} from \"../defaultRendererConfig\";\nimport {RendererImpl} from \"../interface/RendererImpl\";\nimport {RendererConfig} from \"../../index\";\nimport {getRendererImplInstance} from \"../function/getRendererImplInstance\";\n\nconst RENDERER = 'RENDERER';\n\nexport const getRenderer = (): RendererImpl => {\n\n    let rendererImpl = ApplicationContext.getInstance().get(RENDERER);\n\n    // @Renderer(...) not used in application\n    if (!rendererImpl) {\n        setRenderer(defaultRendererConfig);\n    }\n    return ApplicationContext.getInstance().get(RENDERER);\n};\n\nexport const setRenderer = (appRendererConfig: RendererConfig): void => {\n    ApplicationContext.getInstance().set(RENDERER,  getRendererImplInstance(appRendererConfig));\n};\n\nexport const ActiveRenderer = getRenderer();","import {RendererConfig} from \"../interface/RendererConfig\";\nimport {getRenderer, setRenderer} from \"../context/renderer\";\n\nexport function Renderer(rendererConfig: RendererConfig): any {\n\n    // called with @AppRenderer() or @AppRenderer({})\n    if (!(typeof rendererConfig === 'function')) {\n\n        return (target: any) => {\n            setRenderer(rendererConfig);\n            return target;\n        }\n    }\n}\n\n\n@Renderer({})\nclass DefaultRenderer {}","export * from \"./src/decorator/Renderer\";\nexport * from \"./src/interface/RendererConfig\";\nexport * from \"./src/enum/RendererImplType\";\nexport * from \"./src/context/renderer\";","import {ApplicationContext, ComponentImpl} from \"../../di\";\n\nconst TAG_NAME = 'TAG_NAME';\nconst WEB_COMPONENTS_REGISTERED = 'WEB_COMPONENTS_REGISTERED';\n\nexport class WebComponentReflector {\n\n    static getTagName(component: ComponentImpl<any>): string {\n        return Reflect.get(component, TAG_NAME);\n    }\n\n    static setTagName(component: ComponentImpl<any>, tagName: string): void {\n        Reflect.set(component, TAG_NAME, tagName);\n    }\n\n    static registerByTagName(tagName: string): void {\n        const registeredWebComponents: Array<string> = WebComponentReflector.getAll();\n        registeredWebComponents.push(tagName.toUpperCase());\n        ApplicationContext.setGlobal(WEB_COMPONENTS_REGISTERED, registeredWebComponents);\n    }\n\n    static getAll(): Array<string> {\n        return ApplicationContext.getGlobal(WEB_COMPONENTS_REGISTERED) || [];\n    }\n}","import {WebComponentReflector} from \"../WebComponentReflector\";\n\nexport const isWebComponent = (tagName: string) =>\n    WebComponentReflector.getAll().indexOf((tagName || '').toUpperCase()) !== -1;","import {VirtualElement} from \"../../../../virtualdom/index\";\nimport {AbstractWeakMapReflector} from \"../../../../di/index\";\n\nexport class SlotChildrenReflector extends AbstractWeakMapReflector {\n\n    protected static get REFLECTOR_NAME() {\n        return 'SlotChildrenReflector'\n    };\n\n    static set(node: Element, slotChildren: Array<VirtualElement|string>) {\n        return super.set(node, slotChildren);\n    }\n\n    static get(node: Element): Array<VirtualElement|string> {\n        return super.get(node) || [];\n    }\n\n    static has(node: Element): boolean {\n        return super.has(node);\n    }\n}","import {LIST_KEY_ATTRIBUTE_NAME, SLOT_ELEMENT_TAG_NAME, VirtualElement} from \"../../index\";\nimport {getRenderer} from \"../../../renderer\";\nimport {isWebComponent} from \"../../../webcomponent/src/function/isWebComponent\";\nimport {memoize} from \"../../../lang\";\nimport {FlowIdReflector} from \"../../../webcomponent/src/reflector/cross-instance/FlowIdReflector\";\nimport {SlotChildrenReflector} from \"../../../webcomponent/src/reflector/cross-instance/SlotChildrenReflector\";\n\nexport class VirtualDOMMutator {\n\n    static cacheSlotChildren = (virtualElement: VirtualElement, domElement: Element) => {\n\n        // in case a WebComponent is found, all virtual children are assigned to it's DOM element\n        // so they can be assigned to <st-slot> elements inside (general purpose <slot> polyfill)\n        if (virtualElement && domElement &&\n            virtualElement.children && virtualElement.children.length &&\n            isWebComponent(virtualElement.name)) {\n\n            SlotChildrenReflector.set(domElement, virtualElement.children);\n        }\n    };\n\n    static getSlotChildrenFromParentTree = (domElement: Element): Array<VirtualElement|string> => {\n\n        let slotChildren: Array<VirtualElement|string> = SlotChildrenReflector.get(domElement);\n\n        if (slotChildren && slotChildren.length) {\n            return slotChildren;\n        } else if (domElement.parentNode && (\n            FlowIdReflector.has(domElement.parentNode) ||\n            isWebComponent((domElement.parentNode as Element).tagName)\n        )) {\n            return VirtualDOMMutator.getSlotChildrenFromParentTree(domElement.parentNode as Element);\n        }\n        return slotChildren;\n    };\n\n    static mutateSlotElement = (parent: Element, virtualElement: VirtualElement) => {\n\n        if (parent) {\n\n            const slotChildren: Array<VirtualElement|string> = VirtualDOMMutator.getSlotChildrenFromParentTree(parent);\n\n            if (slotChildren) {\n\n                const filteredSlotChildren = [];\n\n                // iterate slot children\n                for (let s=0; s<slotChildren.length; s++) {\n\n                    const slotChild: VirtualElement|string = slotChildren[s];\n                    const slotName = virtualElement.attributes ? virtualElement.attributes.name : undefined;\n\n                    if (typeof slotChild !== 'string') {\n\n                        const slotSelectionName = slotChild.attributes ? slotChild.attributes['slot'] : undefined;\n\n                        // in case the <st-slot> has a name=\"?\" attribute and the slotChild has a slot=\"?\" attribute,\n                        // the slotChild is only allowed to be slotted here, if the name matches\n                        if (slotName) {\n\n                            if (slotName === slotSelectionName) {\n                                filteredSlotChildren.push(...slotChild.children);\n                            }\n\n                        } else if (!slotSelectionName) {\n\n                            // in case of <slot> without name and no slot name selection\n                            filteredSlotChildren.push(...slotChild.children);\n                        }\n\n                    } else {\n\n                        // no slot name based selection possible as it is a TextNode\n                        filteredSlotChildren.push(...slotChild);\n                    }\n                }\n\n                // set slot children only if they match, otherwise fallback to default content\n                if (filteredSlotChildren && filteredSlotChildren.length) {\n                    virtualElement.children = filteredSlotChildren;\n                }\n            }\n        }\n    };\n\n    static mutateSlotChildrenElement = (domElement: Element) => {\n\n        // clean implicitly created elements space (slot target itself)\n        domElement.childNodes.forEach((node: Node) => {\n            domElement.removeChild(node);\n        });\n    };\n\n    static mutateElementTree = memoize((\n        domElements: NodeListOf<Element>,\n        virtualElements: Array<VirtualElement|string>,\n        parent: Element,\n        flowId: number\n    ) => {\n\n        // length to walk is the bigger number of both lists (reality in DOM vs. virtual DOM)\n        let maxLength = domElements.length > virtualElements.length ?\n            domElements.length : virtualElements.length;\n\n        // walk through max. possible  differences on this level of the subtree\n        for (let i=0; i<maxLength; i++) {\n\n            // removeChild() called before and end of similarities is logically reached\n            if (!virtualElements[i] && !domElements[i]) {\n                break;\n            }\n\n            let domElement = domElements[i];\n\n            if (typeof virtualElements[i] === 'object') {\n\n                VirtualDOMMutator.mutateElement(parent, domElement, virtualElements[i] as VirtualElement, flowId)\n\n            } else {\n\n                VirtualDOMMutator.mutateTextNode(parent, domElement, virtualElements[i] as string, flowId);\n            }\n        }\n    }, [3 /* ignore flowId in memorization check */]);\n\n    static mutateElement = (parent: Element, domElement: Element, virtualElement: VirtualElement, flowId: number) => {\n\n        // mutation result states (apart from atomic attribute changes)\n        let created = false;\n        let replaced = false;\n\n        if (virtualElement && virtualElement.attributes && virtualElement.attributes.slot) {\n\n            VirtualDOMMutator.mutateSlotChildrenElement(domElement);\n\n            // ignore further rendering here; this gonna be rendered somewhere else\n            return;\n        }\n\n        if (virtualElement && virtualElement.name === SLOT_ELEMENT_TAG_NAME) {\n\n            // Apply <st-slot> transformation\n            VirtualDOMMutator.mutateSlotElement(parent, virtualElement);\n        }\n\n        // mutation options per child element on each level:\n\n        if (!virtualElement && domElement) {\n\n            // DOMElement existing but no such VirtualElement: Evict zombie node\n            parent.removeChild(domElement);\n\n        } else if (virtualElement && !domElement) {\n\n            // VirtualElement exists but no DOMElement: Append node\n            domElement = getRenderer().createNativeElement(virtualElement, flowId);\n            created = true;\n\n            VirtualDOMMutator.cacheSlotChildren(virtualElement, domElement);\n            // this.updateAllAttributeEventListeners(virtualElement, domElement);\n\n            // VirtualElement exists but no DOMElement: Append node\n            parent.appendChild(domElement);\n\n        } else if (virtualElement && domElement &&\n            ((domElement.tagName || '').toUpperCase() !== virtualElement.name.toUpperCase())) {\n\n            // DOMElement and VirtualElement existing but tagName differs: Replace node\n            // also: DOMElement is a TextNode (typeof tagName == 'undefined') but VirtualElement is not\n\n            // tag name differs, replace node\n            parent.removeChild(domElement);\n\n            domElement = getRenderer().createNativeElement(virtualElement, flowId);\n            created = true;\n\n            VirtualDOMMutator.cacheSlotChildren(virtualElement, domElement);\n            // this.updateAllAttributeEventListeners(virtualElement, domElement);\n\n            parent.appendChild(domElement);\n\n        } else {\n\n            // DOMElement and VirtualElement are the same on index and tagName\n            // but attributes might differ: May update attributes\n            // this.updateAllAttributeEventListeners(virtualElement, domElement);\n\n            // DOMElement might have attributes that differ from VirtualElement attributes\n            // Replace attribute value then\n            if (domElement.attributes) {\n\n                const attributes: Array<Attr> = Array.from(domElement.attributes);\n\n                for (let a=0; a<attributes.length; a++) {\n\n                    const attributeName = attributes[a].name;\n\n                    if (!attributeName.startsWith('on')) {\n\n                        if (!virtualElement.attributes || !virtualElement.attributes[attributeName]) {\n\n                            // DOMElement has an attribute that doesn't exist on VirtualElement attributes anymore\n                            domElement.removeAttribute(attributeName);\n\n                        } else if (domElement.getAttribute(attributeName) !== virtualElement.attributes[attributeName].toString()) {\n\n                            if (attributeName === LIST_KEY_ATTRIBUTE_NAME) {\n\n                                const domElementReplacement = getRenderer().createNativeElement(virtualElement, flowId);\n                                replaced = true;\n\n                                VirtualDOMMutator.cacheSlotChildren(virtualElement, domElementReplacement);\n                                // this.updateAllAttributeEventListeners(virtualElement, domElementReplacement);\n\n                                parent.replaceChild(domElementReplacement, domElement);\n\n                            } else {\n\n                                // DOMElement attribute value differs from VirtualElement attribute: Update\n                                domElement.setAttribute(attributeName, virtualElement.attributes[attributeName]);\n                            }\n                        }\n                    }\n                }\n            }\n\n            // VirtualElement might have additional attributes, DOMElement doesn't have atm\n            if (!replaced && virtualElement.attributes) {\n\n                // update attributes\n                for (let attributeName in virtualElement.attributes) {\n\n                    if (virtualElement.attributes.hasOwnProperty(attributeName) &&\n                        !domElement.hasAttribute(attributeName) && !attributeName.startsWith('on')) {\n\n                        // DOMElement attribute value differs from VirtualElement attribute: Set\n                        domElement.setAttribute(attributeName, virtualElement.attributes[attributeName]);\n                    }\n                }\n            }\n        }\n\n        // process children (recursion)\n\n        // optimization: If freshly created, all children are already perfectly rendered\n        // so no need to walk through all child nodes\n        if ((!created && !replaced) || isWebComponent(virtualElement.name)) {\n\n            // parent elements must be both existing\n            if (domElement && virtualElement &&\n\n                // and at least the existing DOM subtree\n                // or the virtual DOM subtree must be given\n                ((domElement.childNodes && domElement.childNodes.length) ||\n                    (virtualElement.children && virtualElement.children.length))) {\n\n                // recursive call with childNodes and virtualElement childNodes\n                VirtualDOMMutator.mutateElementTree(\n                    domElement.childNodes as NodeListOf<Element> || [],\n                    virtualElement.children,\n                    domElement,\n                    flowId\n                );\n            }\n        }\n    };\n\n    static mutateTextNode = (parent: Element, domElement: Element, virtualElementTextContent: string, flowId: number) => {\n\n        // text node content\n        if (typeof virtualElementTextContent == 'undefined' && domElement) {\n\n            // DOMElement existing but no such VirtualElement: Evict zombie node\n            parent.removeChild(domElement);\n\n        } else if (virtualElementTextContent && !domElement) {\n\n            // VirtualElement exists but no DOMElement: Append node\n            if (parent.nodeType === Node.TEXT_NODE) {\n                parent.textContent += virtualElementTextContent;\n            } else {\n                parent.appendChild(getRenderer().createNativeTextNode(virtualElementTextContent, flowId));\n            }\n\n        } else if (virtualElementTextContent && domElement){\n\n            // TextNode is present on both sides but content might differ\n            // update innerText\n\n            if (domElement.nodeType === Node.TEXT_NODE) {\n\n                // DOMElement remains being a TextNode\n                // ...but has changed: Reflect the change\n                if (domElement.textContent !== virtualElementTextContent) {\n                    domElement.textContent = virtualElementTextContent;\n                }\n            } else {\n\n                // VirtualElement is a TextNode now but DOMElement is not: remove and replace\n                parent.removeChild(domElement);\n                parent.appendChild(getRenderer().createNativeTextNode(virtualElementTextContent, flowId));\n            }\n        }\n    };\n}","// force-import interfaces for framework and Web Standard TSX types\nimport \"./src/interface/HTMLIntrinsicElements\";\nimport \"./src/interface/SVGIntrinsicElements\";\n\n// typing for <st-fragment>\nimport \"./src/interface/SpringTypeFragmentElementAttributes\";\n\n// typing for <st-slot>\nimport \"./src/interface/SpringTypeSlotElementAttributes\";\n\nexport * from \"./src/interface/VirtualElement\";\nexport * from \"./src/constants\";\nexport * from \"./src/transformation/transformElementToVirtualElement\";\nexport * from \"./src/transformation/transformToFlatElementList\";\nexport * from \"./src/transformation/VirtualDOMTransformer\";\nexport * from \"./src/mutation/VirtualDOMMutator\";","import {CaseTransformer} from \"../../lang\";\nimport {VirtualElement} from \"../../virtualdom\";\nimport {ActiveRenderer} from \"../../renderer\";\n\nexport class CSSDeclarationBlockGenerator {\n\n    static generate(declaration: any): VirtualElement|string {\n\n        const generateDeclaration = (declaration: any, mediaQuery: boolean = false): string => {\n\n            let styles = '';\n\n            // support for template-string based stylesheets\n            if (typeof declaration === 'string') {\n                return declaration;\n            }\n\n            for (let selector in declaration) {\n\n                if (declaration.hasOwnProperty(selector)) {\n\n                    if (selector.indexOf('@media') > -1) {\n\n                        styles = `${styles}\\n\\n${selector} {${generateDeclaration(declaration[selector], true)}    \\n}\\n\\n`;\n\n                    } else {\n\n                        let styleMapping = '';\n\n                        for (let identifier in declaration[selector]!) {\n\n                            if (declaration[selector]!.hasOwnProperty(identifier)) {\n\n                                if (typeof declaration[selector] === 'string') {\n\n                                    // support for template-string based block styles\n                                    styleMapping = declaration[selector] as string;\n\n                                } else {\n\n                                    styleMapping = `${styleMapping}\\n    ${mediaQuery ? '    ': ''}${\n                                        CaseTransformer.camelToKebabCase(identifier)\n                                        }: ${(declaration[selector] as any)[identifier]};`;\n\n                                }\n                            }\n                        }\n                        styles = `${styles} \\n\\n${mediaQuery ? '    ': ''}${selector} {\\n${mediaQuery ? '        ': '    '}${styleMapping}\\n${mediaQuery ? '    ': ''}}`;\n                    }\n                }\n            }\n            return styles;\n        };\n\n        return <style type=\"text/css\">\n\n            {\n                generateDeclaration(declaration)\n            }\n\n        </style> as VirtualElement;\n    }\n}","// see: https://developer.mozilla.org/en-US/docs/Web/CSS/:host()\nexport const HOST_SELECTOR = ':host';","import {HOST_SELECTOR} from \"./constant/HOST_SELECTOR\";\nimport {CaseTransformer} from \"../../lang\";\n\nexport class CSSInlineStyleGenerator {\n\n    static generateForStyleAttribute(declaration: any): any {\n\n        const inlineStyles: any = {};\n\n        for (let selector in declaration) {\n\n            if (selector === HOST_SELECTOR) {\n\n                // support for template-string based styling\n                if (typeof declaration[selector] === 'string') {\n                    return declaration[selector];\n                }\n\n                for (let identifier in declaration[selector]!) {\n                    inlineStyles[CaseTransformer.camelToKebabCase(identifier)] = (declaration[selector] as any)[identifier];\n                }\n            }\n        }\n        return inlineStyles;\n    }\n}","import {ApplicationContext} from \"../../../di\";\n\nconst THEME = \"THEME\";\n\nexport const setTheme = (prototype: any, theme: any) => {\n    ApplicationContext.getInstance().set(THEME, theme);\n};\n\nexport const getTheme = (): any => ApplicationContext.getInstance().get(THEME);","import {setTheme} from \"../context/theme\";\n\nexport function Theme(theme: any): any {\n\n    // called with @Theme() or @Theme({ ... })\n    if (!(typeof theme === 'function')) {\n\n        return (target: any) => {\n            setTheme(target, theme);\n            return target;\n        }\n    }\n}","export * from \"./src/CSSDeclarationBlockGenerator\";\nexport * from \"./src/CSSInlineStyleGenerator\";\nexport * from \"./src/decorator/Theme\";\nexport * from \"./src/constant/HOST_SELECTOR\";\nexport * from \"./src/interface/StyleFunction\";\nexport * from \"./src/interface/TypedStyleSheet\";\nexport * from \"./src/interface/TemplateStringStyleSheet\";\nexport * from \"./src/context/theme\";\n","import {ChangeDetectionInterceptor} from \"../interface/ChangeDetectionInterceptor\";\n\nexport const interceptableChange = (\n    props: any, \n    name: string | number | symbol, \n    value: any,\n    onChange: ChangeDetectionInterceptor,\n    onBeforeChange: ChangeDetectionInterceptor,\n    instance?: any,\n) => {\n\n    const cancelled = !onBeforeChange(props, name, value, instance);\n\n    if (!cancelled) {\n        \n        props[name] = value;\n        \n        onChange(props, name, value, instance);\n    }\n};","import {interceptableChange} from \"./interceptableChange\";\nimport {ChangeDetectionInterceptor} from \"../interface/ChangeDetectionInterceptor\";\nimport {Comparator} from \"../../../lang/src/object/Comparator\";\n\nexport const createChangeDetector = (\n    initialValue: any,\n    memorize: boolean,\n    onChange: ChangeDetectionInterceptor = (instance: any, name: string|number|symbol, value: any) => {},\n    onBeforeChange: ChangeDetectionInterceptor = (instance: any, name: string|number|symbol, value: any) => true,\n    instance?: any\n): any => {\n\n    return new Proxy(initialValue, {\n        set: (props: any, name: string | number | symbol, value: any): boolean => {\n\n            if (memorize) {\n\n                if (!Comparator.isEqual(props[name], value)) {\n                    interceptableChange(props, name, value, onChange, onBeforeChange, instance);\n                }\n\n            } else {\n                interceptableChange(props, name, value, onChange, onBeforeChange, instance);\n            }\n            return true;\n        },\n        getPrototypeOf() {\n            return {\n                isChangeDetector: true\n            };\n        }\n    });\n};","import {createChangeDetector} from \"./createChangeDetector\";\nimport {ChangeDetectionInterceptor} from \"../interface/ChangeDetectionInterceptor\";\n\nexport const createFieldChangeDetector = (\n    instance: any,\n    fieldName: string|symbol,\n    memorize: boolean,\n    onChange: ChangeDetectionInterceptor = (props: any, name: string|number|symbol, value: any) => {},\n    onBeforeChange: ChangeDetectionInterceptor = (props: any, name: string|number|symbol, value: any) => true,\n) => {\n\n    instance[fieldName] = createChangeDetector({\n        ...instance[fieldName]\n    }, memorize, onChange, onBeforeChange, instance);\n\n    // make property immutable so it can't loose change detection\n    // in case of instance[fieldName] = someThingElse but throws\n    Object.defineProperty(instance, fieldName, {\n        writable: false\n    });\n};","import {createFieldChangeDetector} from \"./createFieldChangeDetector\";\nimport {ChangeDetectionInterceptor} from \"../interface/ChangeDetectionInterceptor\";\nimport {ComponentReflector} from \"../../../di\";\n\nexport const registerForChangeDetection = (\n    prototype: any,\n    fieldName: string|symbol,\n    memorize: boolean,\n    onChange: ChangeDetectionInterceptor = (instance: any, name: string|number|symbol, value: any) => {},\n    onBeforeChange: ChangeDetectionInterceptor = (instance: any, name: string|number|symbol, value: any) => true,\n) => {\n\n    ComponentReflector.addInitializer(prototype, (instance: any) => {\n        createFieldChangeDetector(instance, fieldName, memorize, onChange, onBeforeChange);\n    });\n};","import {FieldChangeCallbackRegistration} from \"../interface/FieldChangeCallbackRegistration\";\n\nconst ON_FIELD_CHANGE_CALLBACKS = 'ON_FIELD_CHANGE_CALLBACKS';\n\nexport const setOnFieldChangeCallbacks = (prototype: any, onFieldChangeCallbacks: Array<FieldChangeCallbackRegistration>) =>\n    Reflect.set(prototype, ON_FIELD_CHANGE_CALLBACKS, onFieldChangeCallbacks);\n\nexport const getOnFieldChangeCallbacks = (prototype: any) =>\n    Reflect.get(prototype, ON_FIELD_CHANGE_CALLBACKS) || [];","import {registerForChangeDetection} from \"../function/registerForChangeDetection\";\nimport {FieldChangeCallbackRegistration} from \"../interface/FieldChangeCallbackRegistration\";\nimport {getOnFieldChangeCallbacks} from \"../reflector/fieldChangeCallbacks\";\n\nexport function Field(\n    webComponentInstance: any,\n    fieldName: string | symbol\n): any {\n\n    registerForChangeDetection(webComponentInstance.constructor, fieldName, false,\n        (props: any, propName: string|number|symbol, value: any, instance: any) => {\n\n        const onFieldChangeCallbacks: Array<FieldChangeCallbackRegistration> =\n            getOnFieldChangeCallbacks(webComponentInstance.constructor);\n\n        onFieldChangeCallbacks.forEach((onFieldChangeCallbackRegistration: FieldChangeCallbackRegistration) => {\n\n            if (fieldName === onFieldChangeCallbackRegistration.fieldName) {\n                instance[onFieldChangeCallbackRegistration.methodName](propName, value);\n            }\n        })\n    });\n}","import {FieldChangeCallbackRegistration} from \"../interface/FieldChangeCallbackRegistration\";\nimport {getOnFieldChangeCallbacks, setOnFieldChangeCallbacks} from \"../reflector/fieldChangeCallbacks\";\n\nexport function OnFieldChange(fieldName: string): any {\n\n    return (prototype: any, methodName: any) => {\n\n        const onFieldChangeCallbacks: Array<FieldChangeCallbackRegistration> = getOnFieldChangeCallbacks(prototype.constructor);\n\n        onFieldChangeCallbacks.push({\n            fieldName,\n            methodName\n        });\n\n        setOnFieldChangeCallbacks(prototype.constructor, onFieldChangeCallbacks);\n\n        return prototype;\n    };\n}","export * from \"./src/decorator/Field\";\nexport * from \"./src/decorator/OnFieldChange\";\nexport * from \"./src/function/createChangeDetector\";\nexport * from \"./src/function/createFieldChangeDetector\";","/**\n @license @nocompile\n Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n Code distributed by Google as part of the polymer project is also\n subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\nexport const polyfillCustomElementsAPI = function () {\n    'use strict';\n\n    (function () {\n        if (void 0 === (<any>window).Reflect || void 0 === window.customElements || window.customElements.hasOwnProperty('polyfillWrapFlushCallback')) return;\n        const a = HTMLElement;\n        (<any>window).HTMLElement = function HTMLElement() {\n            return Reflect.construct(a, [], this.constructor)\n        }, HTMLElement.prototype = a.prototype, HTMLElement.prototype.constructor = HTMLElement, Object.setPrototypeOf(HTMLElement, a);\n    })();\n\n};\n","import {getInternalRenderApi} from \"../../../renderer/src/function/getInternalRenderApi\";\n\nexport const getAttributeReferencedValue = (attributeValueIdOrValue: string): any => {\n\n    // de-reference attribute value\n    const attributeValue = getInternalRenderApi().attributeValueCache[attributeValueIdOrValue];\n    delete getInternalRenderApi().attributeValueCache[attributeValueIdOrValue];\n    return attributeValue || attributeValueIdOrValue;\n};","const EVENT_ATTRIBUTES = 'EVENT_ATTRIBUTES';\n\nexport const getEventAttributes = (prototype: any) => Reflect.get(prototype, EVENT_ATTRIBUTES) || [];\n\nexport const setEventAttributes = (prototype: any, eventAttributes: Array<string>) =>\n    Reflect.set(prototype, EVENT_ATTRIBUTES, eventAttributes) || [];","import {error} from \"../../../logger\";\nimport {getEventAttributes} from \"../reflector/protoype/eventAttributes\";\n\nexport const getAttributeEventListenerValue = (prototype: any, attributeName: string, attributeValueIdOrValue: any, scope: any): any => {\n\n    const eventAttributes = getEventAttributes(prototype);\n\n    if (eventAttributes.indexOf(attributeName) !== -1) {\n\n        if (typeof attributeValueIdOrValue == 'function') {\n\n            return attributeValueIdOrValue.bind(scope);\n\n        } else if (typeof attributeValueIdOrValue == 'string') {\n\n            return function() {\n                return eval(attributeValueIdOrValue);\n            }.bind(scope);\n\n        } else {\n            return function() {\n\n                error('Event listener set for ' + attributeName + ' is neither code nor function.');\n\n            }.bind(scope);\n        }\n    }\n    return null;\n};","const OBSERVED_ATTRIBUTES = 'OBSERVED_ATTRIBUTES';\n\nexport const setObservedAttributes = (prototype: any, observedAttributes: Array<string>) =>\n    Reflect.set(prototype, OBSERVED_ATTRIBUTES, observedAttributes) || [];\n\nexport const getObservedAttributes = (prototype: any) => Reflect.get(prototype, OBSERVED_ATTRIBUTES) || [];","import {ShadowAttachMode} from \"../../../index\";\n\nconst SHADOW = 'SHADOW';\nconst SHADOW_ATTACH_MODE = 'SHADOW_ATTACH_MODE';\n\nexport const getShadowAttachModeForComponent = (webComponent: any): ShadowAttachMode => {\n    return Reflect.get(webComponent, SHADOW_ATTACH_MODE);\n};\n\nexport const getShadowForComponent = (webComponent: any) => {\n    return Reflect.get(webComponent, SHADOW);\n};\n\n\nexport const setShadowForComponent = (webComponent: any, hasShadowDOM: boolean) => {\n    return Reflect.set(webComponent, SHADOW, hasShadowDOM);\n};\n\nexport const setShadowAttachModeForComponent = (webComponent: any, shadowAttachMode: ShadowAttachMode) => {\n    return Reflect.set(webComponent, SHADOW_ATTACH_MODE, shadowAttachMode);\n};\n","export const SHADOW_ROOT = 'SHADOW_ROOT';\n\nexport const getShadowRootForComponent = (webComponent: any): ShadowRoot => {\n    return Reflect.get(webComponent, SHADOW_ROOT);\n};\n\nexport const setShadowRootForComponent = (webComponent: any, shadowRoot: ShadowRoot) => {\n    return Reflect.set(webComponent, SHADOW_ROOT, shadowRoot);\n};","import {StyleFunction} from \"../../../../tss\";\n\nconst STYLE = 'STYLE';\n\nexport const getStyleForComponent = (webComponent: any): StyleFunction => {\n    return Reflect.get(webComponent, STYLE);\n};\n\nexport const setStyleForComponent = (webComponent: any, style: StyleFunction) => {\n    Reflect.set(webComponent, STYLE, style);\n};","import {TemplateFunction} from \"../../interface/TemplateFunction\";\n\nconst TEMPLATE = 'TEMPLATE';\n\nexport const getTemplateForComponent = (webComponent: any): TemplateFunction => {\n    return Reflect.get(webComponent, TEMPLATE);\n};\n\nexport const setTemplateForComponent = (webComponent: any, template: TemplateFunction) => {\n    Reflect.set(webComponent, TEMPLATE, template);\n};","import {transformToFlatElementList, VirtualDOMTransformer, VirtualElement} from \"../../../virtualdom\";\nimport {CSSDeclarationBlockGenerator, CSSInlineStyleGenerator, getTheme} from \"../../../tss\";\nimport {ComponentReflector} from \"../../../di\";\nimport {ComponentImpl} from \"../../../di/src/interface/ComponentImpl\";\nimport {getAttributeReferencedValue} from \"./getAttributeReferencedValue\";\nimport {getAttributeEventListenerValue} from \"./getAttributeEventListenerValue\";\nimport {getObservedAttributes} from \"../reflector/protoype/observedAttributes\";\nimport {getShadowForComponent} from \"../reflector/protoype/shadow\";\nimport {getShadowRootForComponent} from \"../reflector/instance/shadowRoot\";\nimport {getStyleForComponent} from \"../reflector/protoype/style\";\nimport {getTemplateForComponent} from \"../reflector/protoype/template\";\nimport {VirtualDOMMutator} from \"../../../virtualdom/src/mutation/VirtualDOMMutator\";\nimport {Merge, Partial} from \"../../../lang\";\n\nconst VIRTUAL_DOM = 'VIRTUAL_DOM';\n\nexport const createWebComponentClass = (tagName: string, injectableWebComponent: ComponentImpl<any>) => {\n\n    // custom web component extends user implemented web component class\n    // which extends HTMLElement\n    const CustomWebComponent = class extends injectableWebComponent {\n\n        constructor(...args: Array<any>) {\n            super();\n\n            // call all registered initializer functions for this WebComponent as BeanFactory is not\n            // creating instances of WebComponents but document.createElement. Thus, we need to do it here.\n            ComponentReflector.callInitializers(ComponentReflector.getInitializers(CustomWebComponent), this);\n        }\n\n        static get observedAttributes() {\n            return getObservedAttributes(CustomWebComponent);\n        }\n\n        shouldAttributeChange(name: string, oldValue: any, newValue: any): boolean {\n            return true;\n        }\n\n        changeAttribute(name: string, newValue: string): void {\n            this[name] = newValue;\n        }\n\n        render(): Array<VirtualElement> {\n\n            let cancelled = false;\n            const elements: Array<VirtualElement> = [];\n\n            if (super.onBeforeRender) {\n                cancelled = super.onBeforeRender();\n            }\n\n            if (!cancelled) {\n\n                const style = getStyleForComponent(CustomWebComponent);\n\n                // generate and inject styles\n                if (style) {\n\n                    const contextTheme = getTheme();\n\n                    const theme = {\n                        ...contextTheme ? contextTheme : {}\n                    };\n\n                    transformToFlatElementList(\n                        elements,\n                        CSSDeclarationBlockGenerator.generate(style(this, theme))\n                    );\n\n                    // support for :component selector (self-referenced component styles) works even in shadow DOM\n                    const componentInlineStyle: any =\n                        CSSInlineStyleGenerator.generateForStyleAttribute(style(this, theme));\n\n                    for (let styleAttributeName in componentInlineStyle) {\n\n                        if (componentInlineStyle.hasOwnProperty(styleAttributeName)) {\n                            this.style[styleAttributeName] = componentInlineStyle[styleAttributeName];\n                        }\n                    }\n                }\n\n                if (super.render) {\n\n                    transformToFlatElementList(elements, super.render());\n\n                } else {\n\n                    const template = getTemplateForComponent(CustomWebComponent);\n\n                    if (typeof template === 'function') {\n                        transformToFlatElementList(elements, template(this));\n                    }\n                }\n\n                if (super.onAfterRender) {\n                    super.onAfterRender(elements);\n                }\n            }\n            return elements;\n        }\n\n        doFlow() {\n\n            const virtualElements: Array<VirtualElement> = this.render();\n\n            if (virtualElements) {\n\n                const root = getShadowForComponent(CustomWebComponent) ?\n                    getShadowRootForComponent(this) :\n                    this as unknown as Element;\n\n                const virtualElementRoot = VirtualDOMTransformer.transformVirtualElementTree({\n                    name: tagName,\n                    children: virtualElements\n                });\n\n                Reflect.set(this, VIRTUAL_DOM, virtualElementRoot);\n\n                VirtualDOMMutator.mutateElementTree(\n                    root.childNodes as NodeListOf<Element>,\n                    virtualElementRoot && typeof virtualElementRoot === 'object' ?\n                        virtualElementRoot.children : [],\n                    root,\n                    performance.now()\n                );\n            }\n        }\n\n        async flow(initial: boolean = false): Promise<void> {\n\n            let cancelled = false;\n\n            if (super.onBeforeFlow) {\n                cancelled = super.onBeforeFlow(initial);\n            }\n\n            if (!cancelled && this.isConnected) {\n\n                this.doFlow();\n\n                if (super.onFlow) {\n                    super.onFlow(initial);\n                }\n            }\n        }\n\n        shouldFlowOnAttributeChange(attributeName: string, oldValue: any, newValue: any): boolean {\n            return true;\n        }\n\n        flowOnAttributeChange(attributeName: string, oldValue: any, newValue: any) {\n\n            if (this.shouldFlowOnAttributeChange(attributeName, oldValue, newValue)) {\n                this.flow();\n            }\n        }\n\n        attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n\n            let cancelled = false;\n\n            const attributeValue = getAttributeEventListenerValue(CustomWebComponent, name, newValue, this) ||\n                getAttributeReferencedValue(newValue);\n\n            if (super.onBeforeAttributeChange) {\n                cancelled = super.onBeforeAttributeChange(name, oldValue, attributeValue);\n            }\n\n            if (!cancelled && this.shouldAttributeChange(name, oldValue, newValue)) {\n\n                this.changeAttribute(name, attributeValue);\n\n                if (super.onAttributeChanged) {\n                    return super.onAttributeChanged(name, oldValue, attributeValue);\n                }\n            }\n        }\n\n        doConnect() {\n\n            // delay initial flow so that MutationObserver for initial\n            // DOM changes is called first (it's a DOM impl. timing/lifecycle glitch)\n            setTimeout(() => {\n                this.flow(true);\n            }, 1 /* ms delay */);\n        }\n\n        connectedCallback() {\n\n            let cancelled = false;\n\n            if (super.onBeforeConnect) {\n                cancelled = super.onBeforeConnect();\n            }\n\n            if (!cancelled) {\n\n                this.doConnect();\n\n                if (super.onConnect) {\n                    super.onConnect();\n                }\n            }\n        }\n    };\n    return CustomWebComponent;\n};","import {transformElementToVirtualElement, VirtualDOMMutator} from \"../../../virtualdom\";\nimport {FlowIdReflector} from \"../reflector/cross-instance/FlowIdReflector\";\nimport {isWebComponent} from \"./isWebComponent\";\n\nexport const installInitialMutationObserver = (instance: any, tagName: string) => {\n\n    // initial DOM children processing -> transform <web-component>$childNodes</web-component>\n    // into an Array<VirtualElement> to be further transformed and re-rendered\n    const observer = new MutationObserver((mutationsList) => {\n\n        const webComponentNode: Node = instance;\n        let initialChildren: Array<Element> = [];\n\n        const addedNodes = mutationsList\n            .filter(mutation => mutation.type === 'childList')\n            .filter(mutation => mutation.addedNodes && mutation.addedNodes.length)\n            .map(mutation => mutation.addedNodes);\n\n        addedNodes.forEach((mutationNodeList: NodeList) => {\n\n            initialChildren = [...initialChildren, ...mutationNodeList as unknown as Array<Element>];\n\n            // prevent mutation from firing re-flows by self-change\n            initialChildren = initialChildren.filter((child) =>\n                !FlowIdReflector.has(child) && !isWebComponent(child.tagName)\n            );\n        });\n\n        // ECMAScript spec. whitespace-only check\n        // https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Whitespace_in_the_DOM\n        initialChildren = initialChildren.filter(node => (/[^\\t\\n\\r ]/.test(node.textContent || '')));\n\n        // must be a direct child of this component\n        initialChildren = initialChildren.filter(node => node.parentNode === webComponentNode);\n\n        if (initialChildren && initialChildren.length > 0) {\n\n            VirtualDOMMutator.cacheSlotChildren({\n                name: tagName,\n                children: initialChildren.map(element => transformElementToVirtualElement(element))\n            }, instance);\n\n            // evict all children\n            instance.innerHTML = '';\n\n            // queue re-flows\n            instance.flow(!instance.isConnected);\n        }\n        observer.disconnect();\n    });\n\n    observer.observe(instance, { childList: true });\n};","import {ComponentImpl} from \"../../../di/src/interface/ComponentImpl\";\nimport {Component, ComponentReflector} from \"../../../di\";\nimport {createWebComponentClass} from \"./createWebComponentClass\";\nimport {WebComponentReflector} from \"../WebComponentReflector\";\nimport {installInitialMutationObserver} from \"./installInitialMutationObserver\";\n\nexport const decorateWebComponent = (tagName: string, webComponent: ComponentImpl<any>) => {\n    \n    // @Component by default\n    const injectableWebComponent = Component(webComponent);\n    const CustomWebComponent = createWebComponentClass(tagName, injectableWebComponent);\n    const registeredCustomWebComponent = window.customElements.get(tagName);\n\n    if (!registeredCustomWebComponent) {\n\n        // register custom element\n        window.customElements.define(tagName, CustomWebComponent);\n\n        WebComponentReflector.setTagName(<any>CustomWebComponent, tagName);\n\n        WebComponentReflector.registerByTagName(tagName);\n    }\n\n    ComponentReflector.addInitializer(CustomWebComponent, (instance: any) => {\n\n        installInitialMutationObserver(instance, tagName);\n    });\n\n    return CustomWebComponent;\n};","// import es5 adapter for backward-compatibility\nimport {polyfillCustomElementsAPI} from \"../polyfill/polyfillCustomElementsAPI\";\nimport {WebComponentImpl} from \"./../interface/WebComponentImpl\";\nimport {decorateWebComponent} from \"../function/decorateWebComponent\";\nimport {error} from '../../../logger';\n\npolyfillCustomElementsAPI();\n\nexport function Element<WC extends WebComponentImpl<any>>(tagName: string): any {\n    \n    return (webComponent: WC) => {\n\n        if (!tagName) {\n            error(\"The @Element \", webComponent, \" has no tag name! It should look like: @Element('foo-bar-element')\");\n        }\n\n        // must contain a kebab-dash\n        if (tagName.indexOf('-') === -1) {\n            error(\"The @Element \", webComponent, \" tag name is not prefixed. It should look like: app-your-element-name, but it is: \" + tagName);\n        }\n\n        return decorateWebComponent(tagName, webComponent);\n    }\n}","import {AttributeChangeCallbackRegistration} from \"../../interface/AttributeChangeCallbackRegistration\";\n\nconst ATTRIBUTE_CHANGE_CALLBACKS = 'ATTRIBUTE_CHANGE_CALLBACKS';\n\nexport const getAttributeChangeCallbacks = (prototype: any): Array<AttributeChangeCallbackRegistration> =>\n    Reflect.get(prototype, ATTRIBUTE_CHANGE_CALLBACKS) || [];\n\nexport const setAttributeChangeCallbacks = (prototype: any, attributeChangeCallbacks: Array<AttributeChangeCallbackRegistration>) =>\n    Reflect.set(prototype, ATTRIBUTE_CHANGE_CALLBACKS, attributeChangeCallbacks) || [];","import {getAttributeChangeCallbacks} from \"../protoype/attributeChangeCallbacks\";\nimport {AttributeChangeCallbackRegistration} from \"../../interface/AttributeChangeCallbackRegistration\";\n\nconst ATTRIBUTE_DEFAULT_INITIALIZED = 'ATTRIBUTE_DEFAULT_INITIALIZED';\nconst ATTRIBUTE_VALUE = \"ATTRIBUTE_VALUE_\";\nconst ATTRIBUTE_HOOK_REGISTERED = 'TRANSPARENT_ATTRIBUTE_HOOK_REGISTERED';\n\n// Web Standard API naming, do NOT change\nconst GET_ATTRIBUTE_METHOD_NAME = 'getAttribute';\nconst ATTRIBUTES_GETTER_NAME = 'attributes';\n\nexport const getAttribute = (instance: any, attributeName: string) =>\n    Reflect.get(instance, (ATTRIBUTE_VALUE + attributeName) as string);\n\nexport const setAttribute = (instance: any, attributeName: string, value: any) => {\n    Reflect.set(instance, (ATTRIBUTE_VALUE + attributeName) as string,value);\n};\n\nexport const initializeAttributes = (instance: any, prototype: any, observedAttributes: Array<string>) => {\n    // set default attribute values (initial)\n    observedAttributes.forEach((attributeName: string) => {\n\n        if (!Reflect.get(instance, (ATTRIBUTE_DEFAULT_INITIALIZED + attributeName))) {\n\n            setAttribute(instance, attributeName, instance[attributeName]);\n            executeOnAttributeChangeCallbacks(prototype, instance, attributeName);\n\n            Reflect.set(instance, (ATTRIBUTE_DEFAULT_INITIALIZED + attributeName) as string, true);\n        }\n    });\n};\n\nexport const executeOnAttributeChangeCallbacks = (prototype: any, instance: any, attributeName: string) => {\n\n    const attributeChangeCallbacks: Array<AttributeChangeCallbackRegistration> = getAttributeChangeCallbacks(prototype);\n\n    attributeChangeCallbacks.forEach(\n        (attributeChangeCallbackRegistration: AttributeChangeCallbackRegistration) => {\n\n            if (attributeChangeCallbackRegistration.attributeName === attributeName) {\n                instance[attributeChangeCallbackRegistration.methodName]();\n            }\n        });\n};\n\nexport const registerAttributeHooks = (instance: any, observedAttributes: Array<string>) => {\n\n    // if transparent hooks are not yet registered for this @Attribute...\n    if (!Reflect.get(instance, (ATTRIBUTE_HOOK_REGISTERED))) {\n\n        // $webComponent.getAttribute(...) [native]\n        const originalGetAttribute = instance[GET_ATTRIBUTE_METHOD_NAME].bind(instance);\n\n        // replace $webComponent.getAttribute(...)\n        instance[GET_ATTRIBUTE_METHOD_NAME] = (attributeName: string) => {\n\n            // if attribute is not @Attribute observed, call native\n            // $webComponent.getAttribute(...)\n            if (observedAttributes.indexOf(attributeName) === -1) {\n                return originalGetAttribute(attributeName);\n            }\n\n            // else return transparent value\n            return getAttribute(instance, attributeName);\n        };\n\n        // $webComponent.attributes [native]\n        const originalAttributes = instance[ATTRIBUTES_GETTER_NAME];\n\n        // replace $webComponent.attributes\n        Object.defineProperty(instance, ATTRIBUTES_GETTER_NAME, {\n            get: () => {\n\n                // get all native $webComponent.attributes\n                const attributes = originalAttributes;\n\n                // enrich them with @Attribute added attributes\n                observedAttributes.forEach((observedAttributeName: string) => {\n                    attributes[observedAttributeName] = instance[observedAttributeName];\n                });\n                return attributes;\n            }\n        });\n\n        Reflect.set(instance, (ATTRIBUTE_HOOK_REGISTERED) as string, true);\n    }\n};","import {executeOnAttributeChangeCallbacks, getAttribute, setAttribute} from \"../reflector/instance/attributes\";\n\nconst ATTRIBUTE_REGISTERED = \"ATTRIBUTE_REGISTERED_\";\n\nexport const decorateTransparentAttributeGetterAndSetter = (instance: any, prototype: any, observedAttributes: Array<string>) => {\n    observedAttributes.forEach((attributeName: string) => {\n\n        if (!Reflect.get(instance, (ATTRIBUTE_REGISTERED + attributeName))) {\n\n            Object.defineProperty(instance, attributeName, {\n                // call: $webComponent.$attribute = x\n                set: (newValue: any) => {\n\n                    const oldValue = instance[attributeName];\n                    let changeCancelled = false;\n\n                    if (instance.onBeforeAttributeChange) {\n                        changeCancelled = instance.onBeforeAttributeChange(attributeName, oldValue, newValue);\n                    }\n\n                    if (!changeCancelled) {\n\n                        setAttribute(instance, attributeName, newValue);\n\n                        executeOnAttributeChangeCallbacks(prototype, instance, attributeName);\n\n                        instance.flowOnAttributeChange(attributeName, oldValue, newValue);\n                    }\n                    return true;\n                },\n                // call: let y = $webComponent.$attribute\n                get: (): any => getAttribute(instance, attributeName),\n            });\n\n            Reflect.set(instance, (ATTRIBUTE_REGISTERED + attributeName) as string, true);\n        }\n    });\n}","import {ComponentReflector} from \"../../../di\";\nimport {decorateTransparentAttributeGetterAndSetter} from \"../function/decorateTransparentAttributeGetterAndSetter\";\nimport {warn} from '../../../logger';\nimport {getObservedAttributes, setObservedAttributes} from \"../reflector/protoype/observedAttributes\";\nimport {initializeAttributes, registerAttributeHooks} from \"../reflector/instance/attributes\";\n\nexport function Attribute(webComponentInstance: any, attributeName: string | symbol): any {\n\n    // test for uppercase characters\n    if (/[ABCDEFGHIJKLMNOPQRSTUVWXYZ]/g.test(attributeName.toString())) {\n        warn('The @Element', webComponentInstance.constructor, ' has an @Attribute with camelCase naming: ', attributeName, '. Use kebab-case instead!');\n    }\n\n    const observedAttributes = getObservedAttributes(webComponentInstance.constructor);\n    observedAttributes.push(attributeName);\n    setObservedAttributes(webComponentInstance.constructor, observedAttributes);\n\n    ComponentReflector.addInitializer(webComponentInstance.constructor, (instance: any) => {\n\n        initializeAttributes(instance, webComponentInstance.constructor, observedAttributes);\n\n        decorateTransparentAttributeGetterAndSetter(instance, webComponentInstance.constructor, observedAttributes);\n\n        registerAttributeHooks(instance, observedAttributes);\n    });\n}","import {StyleFunction} from \"../../../tss\";\nimport {setStyleForComponent} from \"../reflector/protoype/style\";\n\nexport function Style(style: StyleFunction): any {\n    return (targetWebComponent: any) => {\n\n        setStyleForComponent(targetWebComponent, style);\n\n        return targetWebComponent;\n    }\n}","import {Element} from \"../decorator/Element\";\nimport {Attribute} from \"../decorator/Attribute\";\nimport {Lifecycle} from \"../..\";\nimport {Style} from \"../decorator/Style\";\nimport {VirtualElement} from \"../../../virtualdom\";\nimport {Partial} from \"../../../lang\";\nimport {ActiveRenderer} from \"../../../renderer\";\n\n@Element('st-error-message')\n@Style((view) => ({\n    'p': {\n        color: '#ff0000'\n    }\n}))\nexport class ErrorMessage extends HTMLElement implements Lifecycle {\n\n    @Attribute\n    message: string = \"Unknown error.\";\n\n    render() {\n        return <p>{ this.message }</p> as VirtualElement;\n    }\n}\n\ndeclare global {\n    namespace JSX {\n        interface IntrinsicElements {\n            'st-error-message': Partial<ErrorMessage>;\n        }\n    }\n}","export enum ShadowAttachMode {\n    OPEN = 'open',\n    CLOSED = 'closed'\n}","import {WebComponentImpl} from \"../interface/WebComponentImpl\";\n\nexport function UseElement(component: WebComponentImpl<any>): any {\n    return (targetWebComponent: any) => {\n        return targetWebComponent;\n    }\n}","import {getAttributeChangeCallbacks, setAttributeChangeCallbacks} from \"../reflector/protoype/attributeChangeCallbacks\";\n\nexport function OnAttributeChange(attributeName: string): any {\n\n    return (prototype: any, methodName: any) => {\n\n        const attributeChangeCallbacks = getAttributeChangeCallbacks(prototype.constructor);\n\n        attributeChangeCallbacks.push({\n            methodName,\n            attributeName\n        });\n\n        setAttributeChangeCallbacks(prototype.constructor, attributeChangeCallbacks);\n\n        return prototype;\n    };\n}","import {TemplateFunction} from \"../interface/TemplateFunction\";\nimport {setTemplateForComponent} from \"../reflector/protoype/template\";\n\nexport function Template(template: TemplateFunction): any {\n    return (targetWebComponent: any) => {\n\n        setTemplateForComponent(targetWebComponent, template);\n\n        return targetWebComponent;\n    }\n}","import {ShadowAttachMode} from \"../../index\";\nimport {ComponentReflector} from \"../../../di\";\nimport {\n    getShadowAttachModeForComponent,\n    getShadowForComponent,\n    setShadowAttachModeForComponent,\n    setShadowForComponent\n} from \"../reflector/protoype/shadow\";\nimport {setShadowRootForComponent} from \"../reflector/instance/shadowRoot\";\n\nexport const decorateShadowAndAttachModeForComponent = (webComponent: any, shadowAttachMode?: ShadowAttachMode) => {\n\n    setShadowForComponent(webComponent, true);\n\n    if (shadowAttachMode) {\n        setShadowAttachModeForComponent(webComponent, shadowAttachMode);\n    }\n\n    ComponentReflector.addInitializer(webComponent, (instance: any) => {\n\n        const shadow = getShadowForComponent(webComponent);\n\n        if (shadow) {\n\n            const shadowAttachMode = getShadowAttachModeForComponent(webComponent);\n            const shadowRoot = instance.attachShadow({\n                mode: shadowAttachMode ? shadowAttachMode : ShadowAttachMode.OPEN\n            });\n            setShadowRootForComponent(instance, shadowRoot);\n        }\n    });\n};","import {ShadowAttachMode} from \"../../index\";\nimport {decorateShadowAndAttachModeForComponent} from \"../function/decorateShadowAndAttachModeForComponent\";\n\nexport function ShadowDOM(shadowAttachModeOrComponent?: any|ShadowAttachMode): any {\n\n    if (typeof shadowAttachModeOrComponent === 'function') {\n\n        decorateShadowAndAttachModeForComponent(shadowAttachModeOrComponent);\n\n    } else {\n\n        return (targetWebComponent: any) => {\n\n            decorateShadowAndAttachModeForComponent(targetWebComponent, shadowAttachModeOrComponent);\n\n            return targetWebComponent;\n        }\n    }\n}","import {Attribute} from \"./Attribute\";\nimport {getEventAttributes, setEventAttributes} from \"../reflector/protoype/eventAttributes\";\n\nexport function EventAttribute(webComponentInstance: any, attributeName: string | symbol): any {\n\n    // an event is an attribute with added annotation to transform string functions\n    // into evaluated functions (in case of plain HTML use, integration)\n    Attribute(webComponentInstance, attributeName);\n\n    const eventAttributes = getEventAttributes(webComponentInstance.constructor);\n    eventAttributes.push(attributeName);\n    setEventAttributes(webComponentInstance.constructor, eventAttributes);\n}","export * from \"./src/decorator/Element\";\nexport * from \"./src/WebComponentReflector\";\nexport * from \"./src/component/ErrorMessage\";\nexport * from \"./src/interface/Lifecycle\";\nexport * from \"./src/enum/ShadowAttachMode\";\nexport * from \"./src/decorator/UseElement\";\nexport * from \"./src/decorator/Attribute\";\nexport * from \"./src/decorator/OnAttributeChange\";\nexport * from \"./src/decorator/Style\";\nexport * from \"./src/decorator/Template\";\nexport * from \"./src/interface/TemplateFunction\";\nexport * from \"./src/decorator/ShadowDOM\";\nexport * from \"./src/decorator/EventAttribute\";","export * from \"./src/di/index\";\nexport * from \"./src/hmr/index\";\nexport * from \"./src/lang/index\";\nexport * from \"./src/logger/index\";\nexport * from \"./src/virtualdom/index\";\nexport * from \"./src/renderer/index\";\nexport * from \"./src/tss/index\";\nexport * from \"./src/cd/index\";\nexport * from \"./src/webcomponent/index\";","import {Element, Lifecycle, ActiveRenderer, Renderer} from \"@springtype/core\";\n\n@Element('gantt-chart')\nexport class GanttChart extends HTMLElement implements Lifecycle {\n\n    render() {\n        return <div>Test</div>\n    }\n}"]}