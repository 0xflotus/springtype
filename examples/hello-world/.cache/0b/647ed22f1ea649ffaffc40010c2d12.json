{"id":"../node_modules/@springtype/springtype-incubator/dist/val/src/Validate.js","dependencies":[{"name":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/dist/val/src/Validate.js.map","includedInParent":true,"mtime":1538584912672},{"name":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/src/val/src/Validate.ts","includedInParent":true,"mtime":1538257069268},{"name":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/package.json","includedInParent":true,"mtime":1538585011922},{"name":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/package.json","includedInParent":true,"mtime":1538575570092},{"name":"reflect-metadata","loc":{"line":3,"column":8},"parent":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/dist/val/src/Validate.js","resolved":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/node_modules/reflect-metadata/Reflect.js"},{"name":"../../util","loc":{"line":4,"column":23},"parent":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/dist/val/src/Validate.js","resolved":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/dist/util/index.js"},{"name":"./Validator","loc":{"line":5,"column":28},"parent":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/dist/val/src/Validate.js","resolved":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/dist/val/src/Validator.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"reflect-metadata\");\nconst util_1 = require(\"../../util\");\nconst Validator_1 = require(\"./Validator\");\nconst VALIDATION_METHOD_PARAMNAMES_METADATA = Symbol(\"ParamNames\");\nconst VALIDATION_DECORATOR_METADATA_KEY = Symbol(\"Validation\");\nconst VALIDATOR_DEFAULT = Validator_1.ASSERT_VALIDATOR;\nfunction Validate(validator = VALIDATOR_DEFAULT) {\n    return (target, propertyName, descriptor) => {\n        let method = descriptor.value;\n        const reflectedParamNames = util_1.getParamNames(target[propertyName]);\n        Object.defineProperties(target[propertyName].prototype, {\n            [VALIDATION_METHOD_PARAMNAMES_METADATA]: reflectedParamNames\n        });\n        descriptor.value = function () {\n            const validationObject = Reflect.getMetadata(VALIDATION_DECORATOR_METADATA_KEY, target, propertyName) || {};\n            const errors = [];\n            for (const validationTuple2 of validationObject) {\n                const parameterIndex = validationTuple2._1;\n                const input = arguments[parameterIndex];\n                if (!validationTuple2._2(input)) {\n                    errors.push({\n                        argumentName: reflectedParamNames[parameterIndex],\n                        index: parameterIndex,\n                        input: arguments[parameterIndex]\n                    });\n                }\n            }\n            if (errors.length > 0) {\n                validator.validate(errors);\n            }\n            else {\n                return method.apply(this, arguments);\n            }\n        };\n    };\n}\nexports.Validate = Validate;\nfunction Validation(validator = VALIDATOR_DEFAULT) {\n    return function classDecorator(target) {\n        for (const propertyName of Object.keys(target.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(target.prototype, propertyName);\n            if (descriptor && descriptor.value instanceof Function) {\n                // decorate with validate\n                Validate(validator).apply(null, [target.prototype, propertyName, descriptor]);\n                Object.defineProperty(target.prototype, propertyName, descriptor);\n            }\n        }\n        return target;\n    };\n}\nexports.Validation = Validation;\nfunction baseValidator(constrain) {\n    return function decorator(target, propertyKey, parameterIndex) {\n        const validationObject = Reflect.getOwnMetadata(VALIDATION_DECORATOR_METADATA_KEY, target, propertyKey) || [];\n        Reflect.defineMetadata(VALIDATION_DECORATOR_METADATA_KEY, validationObject.concat(util_1.Tuple2.of(parameterIndex, constrain)), target, propertyKey);\n    };\n}\nexports.baseValidator = baseValidator;\n","map":{"version":3,"file":"Validate.js","sourceRoot":"","sources":["../../../src/val/src/Validate.ts"],"names":[],"mappings":"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","sourcesContent":["import \"reflect-metadata\"\nimport {getParamNames, Tuple2} from \"../../util\";\nimport {ASSERT_VALIDATOR, Validator} from \"./Validator\";\n\nconst VALIDATION_METHOD_PARAMNAMES_METADATA = Symbol(\"ParamNames\");\nconst VALIDATION_DECORATOR_METADATA_KEY = Symbol(\"Validation\");\nconst VALIDATOR_DEFAULT = ASSERT_VALIDATOR;\n\n\nexport function Validate(validator: Validator = VALIDATOR_DEFAULT) {\n    return (target: any, propertyName: string, descriptor: TypedPropertyDescriptor<any>) => {\n        let method = descriptor.value;\n\n        const reflectedParamNames = getParamNames(target[propertyName]);\n\n        Object.defineProperties(target[propertyName].prototype, {\n            [VALIDATION_METHOD_PARAMNAMES_METADATA]: reflectedParamNames\n        });\n\n        descriptor.value = function () {\n            const validationObject: Tuple2<number, IValidate>[] = Reflect.getMetadata(VALIDATION_DECORATOR_METADATA_KEY, target, propertyName) || {};\n            const errors: ValidationResult[] = [];\n            for (const validationTuple2 of validationObject) {\n                const parameterIndex = validationTuple2._1;\n                const input = arguments[parameterIndex];\n\n                if (!validationTuple2._2(input)) {\n                    errors.push({\n                        argumentName: reflectedParamNames[parameterIndex],\n                        index: parameterIndex,\n                        input: arguments[parameterIndex]\n                    })\n                }\n\n            }\n            if (errors.length > 0) {\n                validator.validate(errors);\n            } else {\n                return method.apply(this, arguments);\n            }\n        }\n    }\n}\n\n\nexport function Validation(validator: Validator = VALIDATOR_DEFAULT) {\n    return function classDecorator<T extends { new(...args: any[]): {} }>(target: T) {\n        for (const propertyName of Object.keys(target.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(target.prototype, propertyName);\n            if (descriptor && descriptor.value instanceof Function) {\n                // decorate with validate\n                Validate(validator).apply(null, [target.prototype, propertyName, descriptor]);\n                Object.defineProperty(target.prototype, propertyName, descriptor);\n            }\n        }\n        return target\n    }\n}\n\nexport function baseValidator(constrain: IValidate): ParameterDecorator {\n    return function decorator(target: Object, propertyKey: string | symbol, parameterIndex: number) {\n        const validationObject: Tuple2<number, IValidate>[] = Reflect.getOwnMetadata(VALIDATION_DECORATOR_METADATA_KEY, target, propertyKey) || [];\n        Reflect.defineMetadata(VALIDATION_DECORATOR_METADATA_KEY, validationObject.concat(Tuple2.of(parameterIndex, constrain)), target, propertyKey);\n    }\n}\n\nexport type IValidate = (value: any) => boolean;\n\nexport type ValidationResult = {\n    argumentName: String\n    index: number\n    input: any\n}"]}},"hash":"a3fce97087aebc1b9e62c1199283fa43","cacheData":{"env":{}}}