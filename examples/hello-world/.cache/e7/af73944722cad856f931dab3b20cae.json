{"id":"d40e","dependencies":[{"name":"/Users/aron/IdeaProjects/springtype-incubator/dist/util/src/Method.js.map","includedInParent":true,"mtime":1538586880618},{"name":"/Users/aron/IdeaProjects/springtype-incubator/src/util/src/Method.ts","includedInParent":true,"mtime":1538257069267},{"name":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/package.json","includedInParent":true,"mtime":1538585088056}],"generated":{"js":"\"use strict\";function e(e){var r=e.toString().replace(/\\/\\*.*\\*\\//,\"\"),t=[],i=r.indexOf(\"(\"),s=r.indexOf(\")\"),n=r.substring(i+1,s);if(-1===i)t=[r.split(\"=>\")[0].trim()];else for(var a=n.split(\",\"),l=0;l<a.length;++l){var o=a[l].trim();o&&t.push(o)}return t}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.getParamNames=e;","map":{"mappings":[{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":13}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":1,"column":16},"generated":{"line":1,"column":22}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":1,"column":30},"generated":{"line":1,"column":24}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":2,"column":8},"generated":{"line":1,"column":27}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":2,"column":8},"generated":{"line":1,"column":31}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":2,"column":14},"generated":{"line":1,"column":33}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":2,"column":17},"generated":{"line":1,"column":35}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":2,"column":28},"generated":{"line":1,"column":46}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":2,"column":36},"generated":{"line":1,"column":54}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":2,"column":50},"generated":{"line":1,"column":67}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":3,"column":8},"generated":{"line":1,"column":71}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":3,"column":17},"generated":{"line":1,"column":73}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":4,"column":8},"generated":{"line":1,"column":76}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":4,"column":15},"generated":{"line":1,"column":78}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":4,"column":19},"generated":{"line":1,"column":80}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":1,"column":88}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":5,"column":8},"generated":{"line":1,"column":93}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":5,"column":15},"generated":{"line":1,"column":95}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":5,"column":19},"generated":{"line":1,"column":97}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":5,"column":27},"generated":{"line":1,"column":105}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":6,"column":8},"generated":{"line":1,"column":110}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":6,"column":19},"generated":{"line":1,"column":112}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":6,"column":23},"generated":{"line":1,"column":114}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":6,"column":33},"generated":{"line":1,"column":124}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":6,"column":40},"generated":{"line":1,"column":126}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":6,"column":43},"generated":{"line":1,"column":128}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":8,"column":8},"generated":{"line":1,"column":131}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":8,"column":18},"generated":{"line":1,"column":135}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":8,"column":8},"generated":{"line":1,"column":139}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":10,"column":8},"generated":{"line":1,"column":141}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":10,"column":17},"generated":{"line":1,"column":143}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":10,"column":18},"generated":{"line":1,"column":144}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":10,"column":22},"generated":{"line":1,"column":146}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":10,"column":28},"generated":{"line":1,"column":152}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":10,"column":34},"generated":{"line":1,"column":158}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":10,"column":37},"generated":{"line":1,"column":161}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":16,"column":13},"generated":{"line":1,"column":174}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":14,"column":12},"generated":{"line":1,"column":178}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":14,"column":12},"generated":{"line":1,"column":182}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":14,"column":22},"generated":{"line":1,"column":184}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":14,"column":31},"generated":{"line":1,"column":186}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":14,"column":37},"generated":{"line":1,"column":192}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":16,"column":17},"generated":{"line":1,"column":197}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":16,"column":21},"generated":{"line":1,"column":199}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":16,"column":24},"generated":{"line":1,"column":201}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":16,"column":28},"generated":{"line":1,"column":203}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":16,"column":36},"generated":{"line":1,"column":205}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":16,"column":46},"generated":{"line":1,"column":214}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":16,"column":49},"generated":{"line":1,"column":216}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":18,"column":16},"generated":{"line":1,"column":217}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":18,"column":16},"generated":{"line":1,"column":221}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":18,"column":28},"generated":{"line":1,"column":223}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":18,"column":36},"generated":{"line":1,"column":225}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":18,"column":39},"generated":{"line":1,"column":228}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":20,"column":16},"generated":{"line":1,"column":235}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":21,"column":16},"generated":{"line":1,"column":238}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":21,"column":23},"generated":{"line":1,"column":240}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":21,"column":28},"generated":{"line":1,"column":245}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":25,"column":11},"generated":{"line":1,"column":248}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":25,"column":11},"generated":{"line":1,"column":255}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":257}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":264}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":279}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":287}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":300}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":301}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":308}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":312}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":320}},{"source":"../../../src/util/src/Method.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":334}}],"sources":{"../../../src/util/src/Method.ts":"export function getParamNames(fn: Function) {\n    let src = fn.toString().replace(/\\/\\*.*\\*\\//, '');\n    let params = [];\n    let pos1 = src.indexOf('(');\n    let pos2 = src.indexOf(')');\n    let paramSrc = src.substring(pos1 + 1, pos2);\n\n    if (pos1 === -1) {\n\n        params = [src.split('=>')[0].trim()];\n\n    } else {\n\n        let params_ = paramSrc.split(',');\n\n        for (let i = 0; i < params_.length; ++i) {\n\n            let paramName = params_[i].trim();\n\n            if (paramName) {\n                params.push(paramName);\n            }\n        }\n    }\n    return params;\n}\n"},"lineCount":null}},"hash":"12a9c3bf44bef36c34352f7a6d54ab05","cacheData":{"env":{}}}