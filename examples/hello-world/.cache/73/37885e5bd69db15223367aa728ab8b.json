{"id":"../node_modules/@springtype/springtype-incubator/dist/util/src/Try.js","dependencies":[{"name":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/dist/util/src/Try.js.map","includedInParent":true,"mtime":1538584912653},{"name":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/src/util/src/Try.ts","includedInParent":true,"mtime":1538257069267},{"name":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/package.json","includedInParent":true,"mtime":1538585011922},{"name":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/package.json","includedInParent":true,"mtime":1538575570092},{"name":"./Optional","loc":{"line":3,"column":27},"parent":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/dist/util/src/Try.js","resolved":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/dist/util/src/Optional.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Optional_1 = require(\"./Optional\");\nclass Try {\n    constructor(fun) {\n        this.fun = fun;\n    }\n    getOrElse(defaultValue) {\n        try {\n            return this.fun();\n        }\n        catch (e) {\n            return defaultValue;\n        }\n    }\n    get() {\n        try {\n            return Optional_1.Optional.of(this.fun());\n        }\n        catch (e) {\n            return Optional_1.Optional.none();\n        }\n    }\n    static of(fun) {\n        return new Try(fun);\n    }\n}\nexports.Try = Try;\n","map":{"version":3,"file":"Try.js","sourceRoot":"","sources":["../../../src/util/src/Try.ts"],"names":[],"mappings":";;AAAA,yCAAoC;AAEpC,MAAa,GAAG;IAEZ,YAAoB,GAAY;QAAZ,QAAG,GAAH,GAAG,CAAS;IAChC,CAAC;IAEM,SAAS,CAAC,YAAe;QAC5B,IAAG;YACC,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC;SACrB;QACD,OAAM,CAAC,EAAC;YACJ,OAAO,YAAY,CAAC;SACvB;IACL,CAAC;IAEM,GAAG;QACN,IAAG;YACC,OAAO,mBAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;SAClC;QACD,OAAM,CAAC,EAAC;YACJ,OAAO,mBAAQ,CAAC,IAAI,EAAE,CAAC;SAC1B;IACL,CAAC;IAED,MAAM,CAAC,EAAE,CAAI,GAAY;QACrB,OAAO,IAAI,GAAG,CAAI,GAAG,CAAC,CAAC;IAC3B,CAAC;CACJ;AA1BD,kBA0BC","sourcesContent":["import {Optional} from \"./Optional\";\n\nexport class Try<T> {\n\n    constructor(private fun: () => T) {\n    }\n\n    public getOrElse(defaultValue: T): T {\n        try{\n            return this.fun();\n        }\n        catch(e){\n            return defaultValue;\n        }\n    }\n\n    public get(): Optional<T> {\n        try{\n            return Optional.of(this.fun());\n        }\n        catch(e){\n            return Optional.none();\n        }\n    }\n\n    static of<T>(fun: () => T): Try<T> {\n        return new Try<T>(fun);\n    }\n}"]}},"hash":"9f7442d2dc06d94308174c24ab4a4903","cacheData":{"env":{}}}