{"id":"../node_modules/@springtype/springtype-incubator/dist/val/src/decorators/Range.js","dependencies":[{"name":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/dist/val/src/decorators/Range.js.map","includedInParent":true,"mtime":1538584912694},{"name":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/src/val/src/decorators/Range.ts","includedInParent":true,"mtime":1538257069269},{"name":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/package.json","includedInParent":true,"mtime":1538585011922},{"name":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/package.json","includedInParent":true,"mtime":1538575570092},{"name":"../Validate","loc":{"line":3,"column":27},"parent":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/dist/val/src/decorators/Range.js","resolved":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/dist/val/src/Validate.js"},{"name":"./Required","loc":{"line":4,"column":27},"parent":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/dist/val/src/decorators/Range.js","resolved":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/dist/val/src/decorators/Required.js"},{"name":"./Max","loc":{"line":7,"column":22},"parent":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/dist/val/src/decorators/Range.js","resolved":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/dist/val/src/decorators/Max.js"},{"name":"./Min","loc":{"line":6,"column":22},"parent":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/dist/val/src/decorators/Range.js","resolved":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/dist/val/src/decorators/Min.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Validate_1 = require(\"../Validate\");\nconst Required_1 = require(\"./Required\");\nconst Max_1 = require(\"./Max\");\nconst Min_1 = require(\"./Min\");\nconst Max_2 = require(\"./Max\");\nfunction Range(minimum, maximum) {\n    return Validate_1.baseValidator((value) => {\n        if (!Required_1.validate(value)) {\n            return false;\n        }\n        if (!Max_2.validateType(value)) {\n            throw Error(`Invalid range (type=${typeof value})`);\n        }\n        return validate(value, minimum, maximum);\n    });\n}\nexports.Range = Range;\nfunction validate(value, minimum, maximum) {\n    return Max_1.validate(value, maximum) && Min_1.validate(value, minimum);\n}\n","map":{"version":3,"file":"Range.js","sourceRoot":"","sources":["../../../../src/val/src/decorators/Range.ts"],"names":[],"mappings":";;AAAA,0CAA0C;AAC1C,yCAAwD;AACxD,+BAA8C;AAC9C,+BAA6C;AAC7C,+BAAmC;AAEnC,SAAgB,KAAK,CAAC,OAAe,EAAE,OAAe;IAClD,OAAO,wBAAa,CAAC,CAAC,KAAK,EAAE,EAAE;QAC3B,IAAI,CAAC,mBAAgB,CAAC,KAAK,CAAC,EAAE;YAC1B,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,CAAC,kBAAY,CAAC,KAAK,CAAC,EAAE;YACtB,MAAM,KAAK,CAAC,uBAAuB,OAAO,KAAK,GAAG,CAAC,CAAC;SACvD;QACD,OAAO,QAAQ,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,CAAE,CAAA;IAC7C,CAAC,CAAC,CAAC;AACP,CAAC;AAVD,sBAUC;AAED,SAAS,QAAQ,CAAC,KAAU,EAAE,OAAe,EAAE,OAAe;IAC1D,OAAO,cAAW,CAAC,KAAK,EAAE,OAAO,CAAC,IAAI,cAAW,CAAC,KAAK,EAAE,OAAO,CAAC,CAAA;AACrE,CAAC","sourcesContent":["import {baseValidator} from \"../Validate\";\nimport {validate as requiredValidate}  from \"./Required\"\nimport {validate as maxValidate}  from \"./Max\"\nimport {validate as minValidate} from \"./Min\"\nimport {validateType} from \"./Max\";\n\nexport function Range(minimum: number, maximum: number) {\n    return baseValidator((value) => {\n        if (!requiredValidate(value)) {\n            return false;\n        }\n        if (!validateType(value)) {\n            throw Error(`Invalid range (type=${typeof value})`);\n        }\n        return validate(value, minimum, maximum,)\n    });\n}\n\nfunction validate(value: any, minimum: number, maximum: number): boolean {\n    return maxValidate(value, maximum) && minValidate(value, minimum)\n}\n"]}},"hash":"55730c0ea97631b22ca549714b1b37fd","cacheData":{"env":{}}}