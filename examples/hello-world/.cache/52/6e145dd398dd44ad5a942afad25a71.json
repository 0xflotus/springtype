{"id":"../node_modules/@springtype/springtype-incubator/dist/val/src/Validator.js","dependencies":[{"name":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/dist/val/src/Validator.js.map","includedInParent":true,"mtime":1538584912665},{"name":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/src/val/src/Validator.ts","includedInParent":true,"mtime":1538257069268},{"name":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/package.json","includedInParent":true,"mtime":1538585011922},{"name":"/Users/aron/IdeaProjects/springtype-incubator/examples/hello-world/node_modules/@springtype/springtype-incubator/package.json","includedInParent":true,"mtime":1538575570092}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction buildErrorText(error) {\n    return `Parameter (name=${error.argumentName},index=${error.index}) is invalid (value=${error.input})`;\n}\nclass PrintValidator {\n    constructor() {\n    }\n    validate(errors) {\n        console.error(errors.map(buildErrorText).join(' '));\n    }\n}\nclass AssertValidator {\n    constructor() {\n    }\n    validate(errors) {\n        throw new Error(errors.map(buildErrorText).join(' '));\n    }\n}\nexports.ASSERT_VALIDATOR = new AssertValidator();\nexports.PRINT_VALIDATOR = new PrintValidator();\n","map":{"version":3,"file":"Validator.js","sourceRoot":"","sources":["../../../src/val/src/Validator.ts"],"names":[],"mappings":";;AAEA,SAAS,cAAc,CAAC,KAAuB;IAC3C,OAAO,mBAAmB,KAAK,CAAC,YAAY,UAAU,KAAK,CAAC,KAAK,uBAAuB,KAAK,CAAC,KAAK,GAAG,CAAC;AAC3G,CAAC;AAED,MAAM,cAAc;IAChB;IACA,CAAC;IAED,QAAQ,CAAC,MAA0B;QAC/B,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;IACvD,CAAC;CACJ;AAED,MAAM,eAAe;IACjB;IACA,CAAC;IAED,QAAQ,CAAC,MAA0B;QAC/B,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;IACzD,CAAC;CACJ;AAEY,QAAA,gBAAgB,GAAc,IAAI,eAAe,EAAE,CAAC;AACpD,QAAA,eAAe,GAAc,IAAI,cAAc,EAAE,CAAC","sourcesContent":["import {ValidationResult} from \"./Validate\";\n\nfunction buildErrorText(error: ValidationResult): string {\n    return `Parameter (name=${error.argumentName},index=${error.index}) is invalid (value=${error.input})`;\n}\n\nclass PrintValidator implements Validator {\n    public constructor() {\n    }\n\n    validate(errors: ValidationResult[]): void {\n        console.error(errors.map(buildErrorText).join(' '))\n    }\n}\n\nclass AssertValidator implements Validator {\n    public constructor() {\n    }\n\n    validate(errors: ValidationResult[]): void {\n        throw new Error(errors.map(buildErrorText).join(' '))\n    }\n}\n\nexport const ASSERT_VALIDATOR: Validator = new AssertValidator();\nexport const PRINT_VALIDATOR: Validator = new PrintValidator();\n\nexport interface Validator {\n    validate(result: ValidationResult[]): void;\n}\n"]}},"hash":"cd405764b77dc96cf2a4748efc5a3966","cacheData":{"env":{}}}